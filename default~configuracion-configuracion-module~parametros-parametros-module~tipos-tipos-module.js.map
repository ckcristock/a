{"version":3,"sources":["./src/app/pages/ajustes/tipos/tipos-riesgo/tipos-riesgo.service.ts","./src/app/pages/ajustes/tipos/tipos-riesgo/tipos-riesgo.component.ts","./src/app/pages/ajustes/tipos/tipos-riesgo/tipos-riesgo.component.html","./src/app/pages/ajustes/tipos/tipos-agenda/tipos-agenda.component.html","./src/app/pages/ajustes/tipos/tipos-agenda/tipos-agenda.component.ts","./src/app/pages/ajustes/tipos/contrato/contrato.component.ts","./src/app/pages/ajustes/tipos/contrato/contrato.component.html","./src/app/pages/ajustes/tipos/profesiones/profesiones.component.ts","./src/app/pages/ajustes/tipos/profesiones/profesiones.component.html","./src/app/pages/ajustes/tipos/tipos-novedades/tipos-novedades.component.ts","./src/app/pages/ajustes/tipos/tipos-novedades/tipos-novedades.component.html","./src/app/pages/ajustes/tipos/tipos-novedades/tipos-novedades.service.ts","./src/app/pages/ajustes/tipos/profesiones/profesiones.service.ts","./src/app/pages/ajustes/tipos/tipos-ingreso/tipos-ingreso.service.ts","./src/app/pages/ajustes/tipos/tipos-documento/tipos-documento.component.ts","./src/app/pages/ajustes/tipos/tipos-documento/tipos-documento.component.html","./src/app/pages/ajustes/tipos/tipos-contrato/tipos-contrato.service.ts","./src/app/pages/ajustes/tipos/tipos-anulacion/tipos-anulacion.component.ts","./src/app/pages/ajustes/tipos/tipos-anulacion/tipos-anulacion.component.html","./src/app/pages/ajustes/tipos/tipos-contrato/tipos-contrato.component.ts","./src/app/pages/ajustes/tipos/tipos-contrato/tipos-contrato.component.html","./src/app/pages/ajustes/tipos/tipos-retenciones/tipos-retenciones.component.ts","./src/app/pages/ajustes/tipos/tipos-retenciones/tipos-retenciones.component.html","./src/app/pages/ajustes/tipos/tipos-glosa/tipos-glosa.component.ts","./src/app/pages/ajustes/tipos/tipos-glosa/tipos-glosa.component.html","./src/app/pages/ajustes/tipos/tipos-visa/tipos-visa.component.ts","./src/app/pages/ajustes/tipos/tipos-visa/tipos-visa.component.html","./src/app/pages/ajustes/tipos/tipos-consulta/tipos-consulta.service.ts","./src/app/pages/ajustes/tipos/tipos-egreso/tipos-egreso.service.ts","./src/app/pages/ajustes/tipos/tipos-egreso/tipos-egreso.component.ts","./src/app/pages/ajustes/tipos/tipos-egreso/tipos-egreso.component.html","./src/app/pages/ajustes/tipos/tipos-rechazo/tipos-rechazo.component.ts","./src/app/pages/ajustes/tipos/tipos-rechazo/tipos-rechazo.component.html","./src/app/pages/ajustes/tipos/tipos-agenda/tipos-agenda.service.ts","./src/app/pages/ajustes/tipos/tipoactivofijo/tipoactivofijo.component.ts","./src/app/pages/ajustes/tipos/tipoactivofijo/tipoactivofijo.component.html","./src/app/pages/ajustes/tipos/tipos-anulacion/tipos-anulacion.service.ts","./src/app/pages/ajustes/tipos/tipos-estado-financiero/tipos-estado-financiero.component.ts","./src/app/pages/ajustes/tipos/tipos-estado-financiero/tipos-estado-financiero.component.html","./src/app/pages/ajustes/tipos/tipos-visa/tipos-visa.service.ts","./src/app/pages/ajustes/tipos/tipos-routing.module.ts","./src/app/pages/ajustes/tipos/tipos-retenciones/tipos-retenciones.service.ts","./src/app/pages/ajustes/tipos/tipos-termino/tipos-termino.component.ts","./src/app/pages/ajustes/tipos/tipos-termino/tipos-termino.component.html","./src/app/pages/ajustes/tipos/tipos-ingreso/tipos-ingreso.component.ts","./src/app/pages/ajustes/tipos/tipos-ingreso/tipos-ingreso.component.html","./src/app/pages/ajustes/tipos/tipoactivofijo/tablatipoactivofijo/tablatipoactivofijo.component.ts","./src/app/pages/ajustes/tipos/tipoactivofijo/tablatipoactivofijo/tablatipoactivofijo.component.html","./src/app/pages/ajustes/tipos/tipos.module.ts","./src/app/pages/ajustes/tipos/tipos-salario/tipos-salario.component.ts","./src/app/pages/ajustes/tipos/tipos-salario/tipos-salario.component.html","./src/app/pages/ajustes/tipos/tipos-documento/tipos-documento.service.ts","./src/app/pages/ajustes/tipos/tipos-termino/tipos-terminos.service.ts","./src/app/pages/ajustes/tipos/tipos-consulta/tipos-consulta.component.html","./src/app/pages/ajustes/tipos/tipos-consulta/tipos-consulta.component.ts","./src/app/pages/ajustes/tipos/tipos-salario/tipos-salario.service.ts"],"names":[],"mappings":"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","file":"default~configuracion-configuracion-module~parametros-parametros-module~tipos-tipos-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposRiesgoService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getRiskType( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateRiskTypes`, {params});\r\n  }\r\n\r\n  createRisk( data:any ) {\r\n    return this.http.post(`${environment.base_url}/risk`, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TiposRiesgoService } from './tipos-riesgo.service';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-riesgo',\r\n  templateUrl: './tipos-riesgo.component.html',\r\n  styleUrls: ['./tipos-riesgo.component.scss']\r\n})\r\nexport class TiposRiesgoComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  form: FormGroup;\r\n  risks: any[] = [];\r\n  private risk: any = {};\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtros: any = {\r\n    risk_type: '',\r\n    accounting_account: ''\r\n  }\r\n  constructor(\r\n    private _tiposRiegoService: TiposRiesgoService,\r\n    private fb: FormBuilder,\r\n    private _validatorsService: ValidatorsService,\r\n    private _swal: SwalService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRiskType();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this._modal.open(content);\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de riesgo';\r\n  }\r\n\r\n  getData(data) {\r\n    this.risk = { ...data };\r\n    this.selected = 'Actualizar tipo de riesgo';\r\n    this.form.patchValue({\r\n      id: this.risk.id,\r\n      risk_type: this.risk.risk_type,\r\n      accounting_account: this.risk.accounting_account\r\n    })\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.risk.id],\r\n      risk_type: ['', this._validatorsService.required],\r\n      accounting_account: ['', this._validatorsService.required]\r\n    });\r\n  }\r\n\r\n  getRiskType(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtros\r\n    }\r\n    this.loading = true;\r\n    this._tiposRiegoService.getRiskType(params)\r\n      .subscribe((res: any) => {\r\n        this.risks = res.data.data;\r\n        this.loading = false;\r\n        this.pagination.collectionSize = res.data.total;\r\n      });\r\n  }\r\n\r\n  createRisk() {\r\n    this._tiposRiegoService.createRisk(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this._modal.close();\r\n        this.getRiskType();\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: res.data,\r\n          showCancel: false,\r\n          text: '',\r\n          timer: 1000\r\n        })\r\n      })\r\n  }\r\n\r\n  activateOrInactivate(novelty, status) {\r\n    let data = {\r\n      id: novelty.id,\r\n      status\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: (status === 'Inactivo' ? 'El riesgo se anulará' : 'El riesgo se activará'),\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._tiposRiegoService.createRisk(data)\r\n          .subscribe(res => {\r\n            this.getRiskType();\r\n            this._swal.show({\r\n              icon: 'success',\r\n              title: (status === 'Inactivo' ? 'Riesgo anulado' : 'Riesgo activado'),\r\n              showCancel: false,\r\n              text: (status === 'Inactivo' ? 'El riesgo ha sido anulado con éxito.' : 'El riesgo ha sido activado con éxito.'),\r\n              timer: 1000\r\n            })\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de riesgo</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(add)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre\"\r\n              [(ngModel)]=\"filtros.risk_type\"\r\n              (input)=\"getRiskType()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre cuenta</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre de cuenta\"\r\n              [(ngModel)]=\"filtros.accounting_account\"\r\n              (input)=\"getRiskType()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && risks.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre</th>\r\n            <th>Cuenta Contable</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let risk of risks\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': risk.status === 'Inactivo'\r\n            }\"\r\n          >\r\n            <td class=\"text-left\">{{ risk.risk_type }}</td>\r\n            <td>{{ risk.accounting_account }}</td>\r\n            <td>\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"openModal(add); getData(risk)\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"risk.status == 'Activo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(risk, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"risk.status == 'Inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(risk, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getRiskType($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"_modal.close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"risk_type\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta contable</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa la cuenta contable\"\r\n            formControlName=\"accounting_account\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"_modal.close()\">\r\n      Cancelar\r\n    </button>\r\n    <button type=\"button\" (click)=\"createRisk()\" [disabled]=\"!form.valid\" class=\"btn btn-primary\">\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-12 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de agenda</h4>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <div\r\n      class=\"rounded-top table-responsive\"\r\n      *ngIf=\"!loading && tiposAgenda.length > 0; else notData\"\r\n    >\r\n      <table class=\"table table-bordered table-striped table-sm\">\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th scope=\"col\">Nombre</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of tiposAgenda\" class=\"text-center\">\r\n            <td>{{ item.name }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getTiposAgenda($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"10\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n</div>\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TiposAgendaService } from './tipos-agenda.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-agenda',\r\n  templateUrl: './tipos-agenda.component.html',\r\n  styleUrls: ['./tipos-agenda.component.scss']\r\n})\r\nexport class TiposAgendaComponent implements OnInit {\r\n  loading: boolean = false\r\n  tiposAgenda: any [] = []\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    collectionSize: 0\r\n  }\r\n\r\n\r\n  constructor(private _tipoService: TiposAgendaService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTiposAgenda();\r\n  }\r\n\r\n  getTiposAgenda(page = 1) {\r\n    this.pagination.page = page;\r\n    this.loading = true;\r\n    this._tipoService.paginate(this.pagination)\r\n      .subscribe((res:any) => {\r\n        this.loading = false;\r\n        this.tiposAgenda = res.data.data;\r\n        this.pagination.collectionSize = res.total;\r\n      })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contrato',\r\n  templateUrl: './contrato.component.html',\r\n  styleUrls: ['./contrato.component.scss']\r\n})\r\nexport class ContratoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-lg-6\">\r\n    <app-tipos-contrato></app-tipos-contrato>\r\n    <app-tipos-salario></app-tipos-salario>\r\n  </div>\r\n  <div class=\"col-lg-6\">\r\n    <app-tipos-documento></app-tipos-documento>\r\n    <app-tipos-termino></app-tipos-termino>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProfesionesService } from './profesiones.service';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { timer } from 'rxjs';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\n\r\n@Component({\r\n  selector: 'app-profesiones',\r\n  templateUrl: './profesiones.component.html',\r\n  styleUrls: ['./profesiones.component.scss']\r\n})\r\nexport class ProfesionesComponent implements OnInit {\r\n  @ViewChild('modal') modal:any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose(){\r\n    if (this.matPanel == false){\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }    \r\n  }\r\n  loading:boolean = false;\r\n  form: FormGroup;\r\n  professions:any[] = [];\r\n  profession:any;\r\n  pagination:any = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    collectionSize: 0\r\n  }\r\n  constructor( \r\n                private fb:FormBuilder,\r\n                private _professions: ProfesionesService,\r\n                private _swal: SwalService\r\n              ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getProfessions();\r\n  }\r\n\r\n  openModal(){\r\n    this.modal.show();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      /* id:[] */\r\n      name: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  getProfessions(page = 1){\r\n    this.pagination.page = page;\r\n    this.loading = true;\r\n    this._professions.getProfessions(this.pagination)\r\n    .subscribe((res:any) =>{\r\n      this.loading = false;\r\n      this.professions = res.data.data;\r\n      this.pagination.collectionSize = res.total;\r\n    })\r\n  }\r\n\r\n  createProfession(){\r\n    this._professions.createNewProfession(this.form.value).subscribe((r:any) =>{\r\n      this.modal.hide();\r\n      this.form.reset();\r\n      this.getProfessions();\r\n      this._swal.show({\r\n        title: 'Creado con éxito',\r\n        text: \"¡La Profesión ha sido creada!\",\r\n        icon: 'success',\r\n        timer: 2500,\r\n        showCancel: false\r\n      });\r\n    });\r\n  }\r\n\r\n  activateOrInactivate(profession, state) {\r\n    let data = {\r\n      id: profession.id,\r\n      state\r\n    }\r\n    this._swal.show({\r\n      title: '¿Estas Seguro?',\r\n      text: \"¡La Profesión será Desactivada!\",\r\n      icon: 'question',\r\n      showCancel: true\r\n    })\r\n    .then((result) =>{\r\n      if (result.isConfirmed) {\r\n        this._professions.createNewProfession(data).subscribe( (r:any) =>{\r\n          this.getProfessions();\r\n        })\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: '¡Proceso Satisfactorio!',\r\n          text: 'La Profesión ha sido Activada con éxito.',\r\n          timer: 2500,\r\n          showCancel: false\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"card-title d-flex justify-content-between\">\r\n            <h4 class=\"text-primary\">Profesiones</h4>\r\n            <div class=\"btn-group rounded\">\r\n                <button class=\"btn btn-primary btn-sm\" style=\"float: right;\" (click)=\"openModal()\">\r\n                    <i class=\"fa fa-plus\"></i> Agregar\r\n                </button>\r\n                <button class=\"btn btn-info btn-sm\" style=\"float: right;\" (click)=\"openClose()\">\r\n                    <i class=\"fas fa-sliders-h\"></i> Filtros\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <hr class=\"line\">\r\n        <mat-accordion multi>\r\n            <mat-expansion-panel class=\"mat-elevation-z0\">\r\n                <div class=\"alert alert-primary text-center\" role=\"alert\">\r\n                    Aún no hay filtros para esta sección\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <table class=\"table table-borderless table-striped mt-5\" *ngIf=\"!loading && professions.length > 0; else notData\">\r\n            <thead class=\"bg-light\">\r\n                <tr>\r\n                    <th>Profesión</th>\r\n                    <th class=\"text-center\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let profession of professions\" [ngClass]=\"{'text-danger font-weight-bold': (profession.state === 'Inactivo' )}\">\r\n                    <td> {{ profession.name }} </td>\r\n                    <td>\r\n                        <div class=\"text-center\">\r\n                            <div ngbDropdown class=\"dropdown-primary\">\r\n                                <button ngbDropdownToggle class=\"btn btn-primary btn-sm waves-effect waves-light \" type=\"button\">\r\n                                    <i class=\"mdi mdi-chevron-down\"></i>\r\n                                </button>\r\n                                <div ngbDropdownMenu>\r\n                                    <a *ngIf=\"profession.state == 'Inactivo'\" class=\"dropdown-item waves-light text-success waves-effect caja-botones\" target=\"_blank\" (click)=\"activateOrInactivate(profession, 'Activo')\">\r\n                                        <i class=\"fas fa-check\"></i> Activar\r\n                                    </a>\r\n                                    <a *ngIf=\"profession.state == 'Activo'\" class=\"dropdown-item waves-light text-danger waves-effect caja-botones\" target=\"_blank\" (click)=\"activateOrInactivate(profession, 'Inactivo')\">\r\n                                        <i class=\"far fa-trash-alt\"></i> Anular\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <ngb-pagination class=\"d-flex justify-content-center pagination-rounded pagination-sm\" [collectionSize]=\"pagination.collectionSize\" [pageSize]=\"pagination.pageSize\" [(page)]=\"pagination.page\" (pageChange)=\"getProfessions($event)\" aria-label=\"Default pagination\"\r\n            maxSize=\"5\" rotate=\"true\" ellipses=\"false\" boundaryLinks=\"true\" rotate=\"true\" ellipses=\"false\" boundaryLinks=\"true\">\r\n        </ngb-pagination>\r\n    </div>\r\n</div>\r\n<ng-template #notData>\r\n    <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n<app-modal-basic #modal [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h5 class=\"modal-title\"> Nueva Profesión </h5>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modal.hide()\">\r\n          <span aria-hidden=\"true\">\r\n            <i class=\"fas fa-times\" (click)=\"modal.hide()\"></i>\r\n          </span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <form [formGroup]=\"form\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-12\">\r\n                    <label for=\"\" class=\"form-label\">Nom. Profesión</label>\r\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control form-control-sm\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"app-modal-footer\">\r\n        <div class=\"form-group text-right\">\r\n            <button (click)=\"modal.hide()\" type=\"button\" class=\"btn btn-danger raised mr-2 btn-sm\">Cerrar</button>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-sm raised\" (click)=\"createProfession()\" [disabled]=\"!form.valid\">Guardar</button>\r\n        </div>\r\n    </div>\r\n</app-modal-basic>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TiposNovedadesService } from './tipos-novedades.service';\r\nimport { consts } from '../../../../core/utils/consts';\r\nimport Swal from 'sweetalert2';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-novedades',\r\n  templateUrl: './tipos-novedades.component.html',\r\n  styleUrls: ['./tipos-novedades.component.scss']\r\n})\r\nexport class TiposNovedadesComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  form: FormGroup;\r\n  novelties: any[] = [];\r\n  public disabled = false;\r\n  private novelty: any = {};\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtros: any = {\r\n    novelty: '',\r\n  }\r\n  modalities = consts.modalities;\r\n  constructor(\r\n    private _tiposNovedadesService: TiposNovedadesService,\r\n    private fb: FormBuilder,\r\n    private _swal: SwalService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getNovelties();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this.disabled = false;\r\n    this._modal.open(content);\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de novedad';\r\n  }\r\n\r\n  getData(data) {\r\n    this.disabled = false;\r\n    this.novelty = { ...data };\r\n    this.selected = 'Actualizar tipo de novedad';\r\n    this.form.patchValue({\r\n      id: this.novelty.id,\r\n      concept: this.novelty.concept,\r\n      novelty: this.novelty.novelty,\r\n      modality: this.novelty.modality\r\n    })\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.novelty.id],\r\n      concept: [''],\r\n      novelty: [''],\r\n      modality: ['']\r\n    });\r\n  }\r\n\r\n  getNovelties(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtros\r\n    }\r\n    this.loading = true;\r\n    this._tiposNovedadesService.getNovelties(params)\r\n      .subscribe((res: any) => {\r\n        this.novelties = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  createNovelty() {\r\n\r\n    this.disabled = true;\r\n\r\n    this._tiposNovedadesService.createNovelty(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this._modal.close();\r\n        this.getNovelties();\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: res.data,\r\n          showCancel: false,\r\n          text: '',\r\n          timer: 1000\r\n        })\r\n      })\r\n  }\r\n\r\n  activateOrInactivate(novelty, status) {\r\n    let data = {\r\n      id: novelty.id,\r\n      status\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: (status === 'Inactivo' ? 'La novedad se anulará' : 'La novedad se activará'),\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._tiposNovedadesService.createNovelty(data)\r\n          .subscribe(res => {\r\n            this.getNovelties();\r\n            this._swal.show({\r\n              icon: 'success',\r\n              title: (status === 'Inactivo' ? 'Novedad anulada!' : 'Novedad activada'),\r\n              showCancel: false,\r\n              text: (status === 'Inactivo' ? 'La novedad ha sido anulada con éxito.' : 'La novedad ha sido activada con éxito.'),\r\n              timer: 1000\r\n            })\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de novedades</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(add)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Novedad</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por novedad\"\r\n              [(ngModel)]=\"filtros.novelty\"\r\n              (input)=\"getNovelties()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top-table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && novelties.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre</th>\r\n            <th>Modalidad</th>\r\n            <th>Novedad</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let novelty of novelties\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': novelty.status === 'Inactivo'\r\n            }\"\r\n          >\r\n            <td>{{ novelty.concept }}</td>\r\n            <td>{{ novelty.modality }}</td>\r\n            <td>{{ novelty.novelty }}</td>\r\n            <td>\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"openModal(add); getData(novelty)\"\r\n                    (change)=\"createForm()\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"novelty.status == 'Activo'\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"activateOrInactivate(novelty, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"novelty.status == 'Inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(novelty, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getNovelties($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"_modal.close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"concept\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Tipo</mat-label>\r\n          <mat-select formControlName=\"modality\" required>\r\n            <mat-option *ngFor=\"let type of modalities\" [value]=\"type.valor\">\r\n              {{ type.clave }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"novelty\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"_modal.close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createNovelty()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposNovedadesService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getNovelties( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateNoveltyTypes`, {params});\r\n  }\r\n\r\n  createNovelty( data:any ) {\r\n    return this.http.post(`${environment.base_url}/disability-leaves`, data);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfesionesService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getProfessions(params = {}){\r\n    return this.http.get(`${environment.base_url}/paginateProfessions`, {params});\r\n  }\r\n\r\n  createNewProfession( data:any ){\r\n    return this.http.post(`${environment.base_url}/professions`, data);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposIngresoService {\r\n  \r\n  constructor( private http: HttpClient ) { }\r\n  \r\n  getIngressType(params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateIngressTypes`, {params});\r\n  }\r\n\r\n  createIngressType( data:any ) {\r\n    return this.http.post(`${environment.base_url}/ingress_types`, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\nimport Swal from 'sweetalert2';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport { TiposDocumentoService } from './tipos-documento.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-documento',\r\n  templateUrl: './tipos-documento.component.html',\r\n  styleUrls: ['./tipos-documento.component.scss']\r\n})\r\nexport class TiposDocumentoComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  isOpen: boolean = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtro: any = {\r\n    name: '',\r\n    code: ''\r\n  }\r\n  documents: any[] = [];\r\n  document: any = {}\r\n  form: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _reactiveValid: ValidatorsService,\r\n    private _typesDocumentService: TiposDocumentoService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getDocumentTypes();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de documento';\r\n    this._modal.open(content)\r\n  }\r\n\r\n  close() {\r\n    this._modal.close();\r\n    this.form.reset();\r\n  }\r\n\r\n  getData(data, content) {\r\n    this.document = { ...data };\r\n    this.selected = 'Actualizar tipo de documento';\r\n    this._modal.open(content);\r\n    this.form.patchValue({\r\n      id: this.document.id,\r\n      name: this.document.name,\r\n      code: this.document.code,\r\n      dian_code: this.document.dian_code\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.document.id],\r\n      name: ['', this._reactiveValid.required],\r\n      code: ['', this._reactiveValid.required],\r\n      dian_code: ['', this._reactiveValid.required],\r\n    })\r\n  }\r\n\r\n  activateOrInactivate(contract, status) {\r\n    let data = {\r\n      id: contract.id,\r\n      status\r\n    }\r\n    Swal.fire({\r\n      title: '¿Estas seguro?',\r\n      text: (status === 'Inactivo' ? 'El Documento se inactivará!' : 'El Documento se activará'),\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonText: (status === 'Inactivo' ? 'Si, Inhabilitar' : 'Si, activar')\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._typesDocumentService.createNewDocument(data)\r\n          .subscribe(res => {\r\n            this.getDocumentTypes();\r\n            Swal.fire({\r\n              title: (status === 'Inactivo' ? 'Documento Inhabilitado!' : 'Documento activado'),\r\n              text: (status === 'Inactivo' ? 'El Documento ha sido Inhabilitada con éxito.' : 'El Documento ha sido activada con éxito.'),\r\n              icon: 'success'\r\n            })\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getDocumentTypes(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtro\r\n    }\r\n    this.loading = true;\r\n    this._typesDocumentService.getDocuments(params)\r\n      .subscribe((res: any) => {\r\n        this.documents = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n        this.loading = false;\r\n      })\r\n  }\r\n\r\n  createNewDocument() {\r\n    this._typesDocumentService.createNewDocument(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this.getDocumentTypes();\r\n        this._modal.close();\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: res.data,\r\n          text: 'Se ha agregado a los tipos de contrato con éxito.'\r\n        })\r\n      })\r\n  }\r\n\r\n  get name_invalid() {\r\n    return (this.form.get('name').invalid && this.form.get('name').touched);\r\n  }\r\n\r\n  get code_invalid() {\r\n    return this.form.get('code').invalid && this.form.get('code').touched;\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h5 class=\"text-primary\">Tipos de documentos</h5>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(modal)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre\"\r\n              [(ngModel)]=\"filtro.name\"\r\n              (input)=\"getDocumentTypes()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && documents.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>CÓDIGO</th>\r\n            <th>NOMBRE</th>\r\n            <th>CÓDIGO DIAN</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let document of documents\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': document.status === 'Inactivo'\r\n            }\"\r\n          >\r\n            <td>{{ document.code }}</td>\r\n            <td class=\"text-left\">{{ document.name }}</td>\r\n            <td>{{ document.dian_code }}</td>\r\n            <td>\r\n              <div class=\"text-center\">\r\n                <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                  <button\r\n                    ngbDropdownToggle\r\n                    class=\"btn btn-primary btn-sm waves-light\"\r\n                    type=\"button\"\r\n                  >\r\n                    <i class=\"mdi mdi-chevron-down\"></i>\r\n                  </button>\r\n                  <div ngbDropdownMenu>\r\n                    <a\r\n                      class=\"dropdown-item text-info waves-light caja-botones\"\r\n                      href=\"javascript:void(0)\"\r\n                      (click)=\"getData(document, modal)\"\r\n                      ><i class=\"far fa-edit\"></i> Editar</a\r\n                    >\r\n                    <a\r\n                      *ngIf=\"document.status == 'Activo'\"\r\n                      href=\"javascript:void(0)\"\r\n                      class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                      (click)=\"activateOrInactivate(document, 'Inactivo')\"\r\n                    >\r\n                      <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                    >\r\n                    <a\r\n                      *ngIf=\"document.status == 'Inactivo'\"\r\n                      href=\"javascript:void(0)\"\r\n                      class=\"dropdown-item text-success waves-light caja-botones\"\r\n                      (click)=\"activateOrInactivate(document, 'Activo')\"\r\n                    >\r\n                      <i class=\"fas fa-check\"></i> Activar</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getDocumentTypes($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #modal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field appearance=\"outline\" class=\"col\">\r\n          <mat-label>Cógido</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el código\"\r\n            formControlName=\"code\"\r\n            name=\"name\"\r\n            maxlength=\"5\"\r\n            autocomplete=\"off\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"code_invalid\">Es necesario el código</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"col\">\r\n          <mat-label>Código DIAN</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            placeholder=\"Ingresa el código DIAN\"\r\n            formControlName=\"dian_code\"\r\n            autocomplete=\"off\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"code_invalid\">Es necesario el código</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" class=\"col\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"name_invalid\">Es necesario el nombre</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createNewDocument()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposContratoService {\r\n\r\n  constructor( private http:HttpClient ) { }\r\n  \r\n  getContractsType( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateContractType`, {params});\r\n  }\r\n\r\n  createNewContract_type( data:any ) {\r\n    return this.http.post(`${environment.base_url}/work-contract-type`, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tipos-anulacion',\r\n  templateUrl: './tipos-anulacion.component.html',\r\n  styleUrls: ['./tipos-anulacion.component.scss']\r\n})\r\nexport class TiposAnulacionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tipos-anulacion works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TiposContratoService } from './tipos-contrato.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport swal from 'sweetalert2';\r\nimport { consts } from 'src/app/core/utils/consts';\r\nimport { ThemeService } from 'ng2-charts';\r\nimport Swal from 'sweetalert2';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-contrato',\r\n  templateUrl: './tipos-contrato.component.html',\r\n  styleUrls: ['./tipos-contrato.component.scss'],\r\n})\r\nexport class TiposContratoComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  isOpen: boolean = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll();\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll();\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 6,\r\n    collectionSize: 0,\r\n  };\r\n  types = consts.contract_type;\r\n  contracts: any[] = [];\r\n  contrato: any = {};\r\n  filtro: any = {\r\n    name: '',\r\n    description: '',\r\n  };\r\n  form: FormGroup;\r\n  constructor(\r\n    private _tiposContratoService: TiposContratoService,\r\n    private fb: FormBuilder,\r\n    private _reactiveValid: ValidatorsService,\r\n    private modalBD: ModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getContractsType();\r\n  }\r\n\r\n  openModal() {\r\n    this.modal.show();\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de Contrato';\r\n  }\r\n  openModalNg(content) {\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de contrato';\r\n    this.modalBD.open(content);\r\n  }\r\n\r\n  close() {\r\n    this.modalBD.close();\r\n    this.form.reset();\r\n  }\r\n\r\n  getData(data,content) {\r\n    this.contrato = { ...data };\r\n    this.selected = 'Actualizar tipo de contrato';\r\n    this.modalBD.open(content);\r\n    this.form.patchValue({\r\n      id: this.contrato.id,\r\n      description: this.contrato.description,\r\n      name: this.contrato.name,\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.contrato.id],\r\n      description: ['', this._reactiveValid.required],\r\n      name: ['', this._reactiveValid.required],\r\n    });\r\n  }\r\n\r\n  getContractsType(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination,\r\n      ...this.filtro,\r\n    };\r\n    this.loading = true;\r\n    this._tiposContratoService\r\n      .getContractsType(params)\r\n      .subscribe((res: any) => {\r\n        this.loading = false;\r\n        this.contracts = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n      });\r\n  }\r\n\r\n  activateOrInactivate(contract, status) {\r\n    let data = {\r\n      id: contract.id,\r\n      status,\r\n    };\r\n    Swal.fire({\r\n      title: '¿Estas seguro?',\r\n      text:\r\n        status === 'Inactivo'\r\n          ? 'El Contrato se inactivará!'\r\n          : 'El Contrato se activará',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonText:\r\n        status === 'Inactivo' ? 'Si, Inhabilitar' : 'Si, activar',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._tiposContratoService\r\n          .createNewContract_type(data)\r\n          .subscribe((res) => {\r\n            this.getContractsType();\r\n            Swal.fire({\r\n              title:\r\n                status === 'Inactivo'\r\n                  ? 'Contrato Inhabilitado!'\r\n                  : 'Contrato activado',\r\n              text:\r\n                status === 'Inactivo'\r\n                  ? 'El Contrato ha sido Inhabilitada con éxito.'\r\n                  : 'El Contrato ha sido activada con éxito.',\r\n              icon: 'success',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  createContractType() {\r\n    this._tiposContratoService\r\n      .createNewContract_type(this.form.value)\r\n      .subscribe((res: any) => {\r\n        swal.fire({\r\n          icon: 'success',\r\n          title: res.data,\r\n          text: 'Se ha agregado a los Documentos con éxito.',\r\n        });\r\n        this.getContractsType();\r\n        this.close()\r\n      });\r\n  }\r\n\r\n  get name_invalid() {\r\n    return this.form.get('name').invalid && this.form.get('name').touched;\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h5 class=\"text-primary\">Tipos de contrato</h5>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <!-- <button class=\"btn btn-primary btn-sm\" (click)=\"openModalNg(modalNg)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button> -->\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [(ngModel)]=\"filtro.name\"\r\n              (input)=\"getContractsType()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n              placeholder=\"Busca por nombre\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && contracts.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre</th>\r\n            <!-- <th>Descripción</th> -->\r\n            <!-- <th><i class=\"mdi mdi-chevron-down\"></i></th> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let contract of contracts\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': contract.status === 'Inactivo'\r\n            }\"\r\n          >\r\n            <td scope=\"row\">{{ contract.name }}</td>\r\n            <!-- <td>{{ contract.description }}</td> -->\r\n            <!-- <td class=\"text-center\">\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item waves-light text-info caja-botones\"\r\n                    href=\"javascript:void(0)\"\r\n                    (click)=\"getData(contract, modalNg)\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"contract.status == 'Activo'\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(contract, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"contract.status == 'Inactivo'\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(contract, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      (pageChange)=\"getContractsType($event)\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #modalNg>\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n      <button\r\n        type=\"button\"\r\n        class=\"close\"\r\n        data-dismiss=\"modal\"\r\n        aria-label=\"Close\"\r\n        (click)=\"close()\"\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <mat-form-field appearance=\"outline\" class=\"col\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Ingresa el nombre\"\r\n              formControlName=\"name\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n              required\r\n            />\r\n            <mat-error *ngIf=\"name_invalid\">Es necesario el nombre</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field appearance=\"outline\" class=\"col\">\r\n            <mat-label>Descripción</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Ingresa la descripción\"\r\n              formControlName=\"description\"\r\n              name=\"description\"\r\n              autocomplete=\"off\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button (click)=\"close()\" type=\"button\" class=\"btn btn-danger\">\r\n        Cancelar\r\n      </button>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"!form.valid\"\r\n        (click)=\"createContractType()\"\r\n      >\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TiposRetencionesService } from './tipos-retenciones.service';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { OperatorFunction, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { NgbModal, NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-tipos-retenciones',\r\n  templateUrl: './tipos-retenciones.component.html',\r\n  styleUrls: ['./tipos-retenciones.component.scss']\r\n})\r\nexport class TiposRetencionesComponent implements OnInit {\r\n  form: FormGroup;\r\n  @ViewChild('modal') modal:any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  closeResult: string;\r\n  openClose(){\r\n    if (this.matPanel == false){\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading:boolean =  false;\r\n  accountPlan:any[] = [];\r\n  retentionTypes:any[] = [];\r\n  retention:any = {};\r\n  title:any = '';\r\n  pagination = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtros = {\r\n    nombre: '',\r\n    porcentaje: '',\r\n    cuentaAsociada: '',\r\n    estado: ''\r\n  }\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private _retentionType: TiposRetencionesService,\r\n    private modalService: NgbModal,\r\n    private _swal: SwalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getRetentionTypes();\r\n    this.getAccountPlan();\r\n  }\r\n\r\n  createForm(){\r\n    this.form = this.fb.group({\r\n      id: [this.retention.id],\r\n      name: ['', Validators.required],\r\n      account_plan_id: ['', Validators.required],\r\n      account_plan: ['', Validators.required],\r\n      percentage: ['', Validators.required],\r\n      description: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public openConfirm(confirm, titulo) {\r\n    this.title = titulo;\r\n    this.modalService.open(confirm, { ariaLabelledBy: 'modal-basic-title', size: 'md', scrollable: true }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any) {\r\n    this.form.reset();\r\n  }\r\n\r\n  openModal(){\r\n    this.modal.show();\r\n    this.title = 'Nuevo tipo de retención';\r\n  }\r\n\r\n  search: OperatorFunction<string, readonly { code }[]> = (\r\n    text$: Observable<string>\r\n  ) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      //filter((term) => term.length >= 3),\r\n      map((term) =>\r\n        this.accountPlan\r\n          .filter((state) => new RegExp(term, 'mi').test(state.code))\r\n          .slice(0, 10)\r\n      )\r\n  );\r\n\r\n  inputFormatBandListValue(value: any) {\r\n    if (value.code)\r\n       return value.code\r\n    return value;\r\n  }\r\n\r\n   resultFormatBandListValue(value: any) {\r\n    return value.code;\r\n  }\r\n\r\n  getAccountPlan(){\r\n    this._retentionType.getAccountPlan().subscribe((r:any) => {\r\n      this.accountPlan = r.data;\r\n    })\r\n  }\r\n\r\n  AsignarCuenta(e: NgbTypeaheadSelectItemEvent) {\r\n    this.form.get('account_plan_id').setValue(e.item.id);\r\n    //let data = this.form.get('account_plan_id').value;\r\n  }\r\n\r\n  getRetentionTypes(page = 1){\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtros\r\n    }\r\n    this.loading = true;\r\n    this._retentionType.getRetentionType(params).subscribe((r:any) => {\r\n      this.retentionTypes = r.data.data;\r\n      this.pagination.collectionSize = r.data.total;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getRetention(retention){\r\n    this.retention = {...retention};\r\n    this.title = 'Editar tipo de retención';\r\n    this.form.patchValue({\r\n      id: this.retention.id,\r\n      name: this.retention.name,\r\n      account_plan_id: this.retention.account_plan_id,\r\n      account_plan: this.retention.account_plan,\r\n      percentage: this.retention.percentage,\r\n      description: this.retention.description\r\n    });\r\n  }\r\n\r\n  save(){\r\n    this._retentionType.updateOrCreateRetentionType(this.form.value).subscribe((r:any) => {\r\n      this.modalService.dismissAll();\r\n      this.form.reset();\r\n      this.getRetentionTypes();\r\n      this._swal.show({\r\n        icon: 'success',\r\n        title: 'Proceso satisfactorio',\r\n        text: 'El tipo de retención ha sido creado con éxito.',\r\n        showCancel: false,\r\n        timer: 1000\r\n      });\r\n    })\r\n  }\r\n\r\n  activateOrInactivate(retention, state){\r\n    let data = {\r\n      id: retention.id,\r\n      state\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      text: (data.state == 'Inactivo' ? '¡El tipo de retención de anulará!' : '¡El tipo de retención de activará!')\r\n    }).then((r) => {\r\n      if (r.isConfirmed) {\r\n        this._retentionType.updateOrCreateRetentionType(data).subscribe((r) => {\r\n          this.getRetentionTypes();\r\n          this._swal.show({\r\n            icon: 'success',\r\n            title: 'Correcto',\r\n            text: (data.state == 'Inactivo' ? 'El tipo de retención ha sido anulado con éxito.' : 'El tipo de retención ha sido activado con éxito.'),\r\n            showCancel: false,\r\n            timer: 1000\r\n          })\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de retenciones</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openConfirm(add, 'Nuevo tipo de retención')\">\r\n            <i class=\"fa fa-plus\"></i> Agregar<!-- openModal() -->\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre\"\r\n              [(ngModel)]=\"filtros.nombre\"\r\n              (input)=\"getRetentionTypes()\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Porcentaje</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por porcentaje\"\r\n              [(ngModel)]=\"filtros.porcentaje\"\r\n              (input)=\"getRetentionTypes()\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Cuenta asociada</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por cuenta asociada (Número de meses)\"\r\n              [(ngModel)]=\"filtros.cuentaAsociada\"\r\n              (input)=\"getRetentionTypes()\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Estado</mat-label>\r\n              <mat-select\r\n                matInput\r\n                placeholder=\"Busca por estado\"\r\n                [(ngModel)]=\"filtros.estado\"\r\n                (selectionChange)=\"getRetentionTypes()\"\r\n              >\r\n                <mat-option value=\"\">Todos</mat-option>\r\n                <mat-option value=\"Activo\">Activo</mat-option>\r\n                <mat-option value=\"Inactivo\">Inactivo</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && retentionTypes.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre retención</th>\r\n            <th>Descripción</th>\r\n            <th>Porcentaje</th>\r\n            <th>Cuenta asociada</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let item of retentionTypes\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': item.state == 'Inactivo'\r\n            }\"\r\n          >\r\n            <td class=\"align-middle\">{{ item.name }}</td>\r\n            <td class=\"align-middle\">{{ item.description }}</td>\r\n            <td class=\"align-middle\">{{ item.percentage }}</td>\r\n            <td class=\"align-middle\">{{ item.account_plan }}</td>\r\n            <td class=\"align-middle\">\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    (click)=\"openConfirm(add, 'Editar tipo de retención'); getRetention(item);\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item waves-light text-info caja-botones\"\r\n                  ><!--  modal.show() -->\r\n                    <i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"item.state == 'Inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"activateOrInactivate(item, 'Activo')\"\r\n                    class=\"dropdown-item waves-light text-success caja-botones\"\r\n                  >\r\n                    <i class=\"fa fa-check\"></i> Activar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"item.state == 'Activo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"activateOrInactivate(item, 'Inactivo')\"\r\n                    class=\"dropdown-item waves-light text-danger caja-botones\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getRetentionTypes($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ title }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-12\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta asociada</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre de la cuenta\"\r\n            [ngbTypeahead]=\"search\"\r\n            formControlName=\"account_plan\"\r\n            [resultFormatter]=\"resultFormatBandListValue\"\r\n            [inputFormatter]=\"inputFormatBandListValue\"\r\n            (selectItem)=\"AsignarCuenta($event)\"\r\n            placement=\"top\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Porcentaje</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            placeholder=\"Ingresa el porcentaje\"\r\n            formControlName=\"percentage\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field\r\n          class=\"col-md-12 mat-form-field-no-padding textarea\"\r\n          appearance=\"outline\"\r\n        >\r\n          <mat-label>Descripción</mat-label>\r\n          <textarea\r\n            matInput\r\n            placeholder=\"Ingresa la descripción\"\r\n            rows=\"5\"\r\n            formControlName=\"description\"\r\n            required\r\n            [cdkTextareaAutosize]=\"true\"\r\n          ></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-danger\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"save()\"\r\n      [disabled]=\"!form.valid\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tipos-glosa',\r\n  templateUrl: './tipos-glosa.component.html',\r\n  styleUrls: ['./tipos-glosa.component.scss']\r\n})\r\nexport class TiposGlosaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tipos-glosa works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TiposVisaService } from './tipos-visa.service';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-visa',\r\n  templateUrl: './tipos-visa.component.html',\r\n  styleUrls: ['./tipos-visa.component.scss']\r\n})\r\nexport class TiposVisaComponent implements OnInit {\r\n  @ViewChild('modal') modal:any;\r\n  loading:boolean = false;\r\n  form: FormGroup;\r\n  visas:any[] = [];\r\n  visa:any = {};\r\n  title:any = '';\r\n  pagination = {\r\n    page: 1,\r\n    pageSize: 6,\r\n    collectionSize: 0\r\n  }\r\n  constructor( \r\n                private fb: FormBuilder,\r\n                private _visa: TiposVisaService,\r\n                private _swal: SwalService\r\n              ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getVisaTypes();\r\n  }\r\n\r\n  openModal(){\r\n    this.modal.show();\r\n    this.title = 'Nuevo tipo de visa';\r\n  }\r\n\r\n  createForm(){\r\n    this.form = this.fb.group({\r\n      id:[this.visa.id],\r\n      name: ['', Validators.required],\r\n      purpose: ['']\r\n    });\r\n  }\r\n\r\n  getVisaTypes( page = 1 ){\r\n    this.pagination.page = page;\r\n    this.loading = true;\r\n    this._visa.getVisaTypes(this.pagination).subscribe((r:any) => {\r\n      this.visas = r.data.data;\r\n      this.loading = false;\r\n      this.pagination.collectionSize = r.data.total;\r\n    })\r\n  }\r\n\r\n  getVisaType(visa){\r\n    this.visa = {...visa};\r\n    this.title = 'Editar Tipo de Visa';\r\n    this.form.patchValue({\r\n      id: this.visa.id,\r\n      name: this.visa.name,\r\n      purpose: this.visa.purpose\r\n    })\r\n  }\r\n\r\n  save(){\r\n    this._visa.save(this.form.value).subscribe((r:any) => {\r\n      this.modal.hide();\r\n      this.form.reset();\r\n      this.getVisaTypes();\r\n      this._swal.show({\r\n        icon: 'success',\r\n        title: r.data.title,\r\n        text: r.data.text,\r\n        showCancel: false\r\n      })\r\n    })\r\n  }\r\n\r\n  activateOrInactivate(visa, state) {\r\n    let data = {\r\n      id: visa.id,\r\n      state\r\n    }\r\n    this._swal.show({\r\n      title: '¿Estas Seguro?',\r\n      text: (data.state == 'Inactivo' ? '¡El tipo de visa será desactivado!' : 'El tipo de visa será Activado'),\r\n      icon: 'question',\r\n      showCancel: true\r\n    })\r\n    .then((result) =>{\r\n      if (result.isConfirmed) {\r\n        this._visa.save(data).subscribe( (r:any) =>{\r\n          this.getVisaTypes();\r\n        })\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: '¡Activado!',\r\n          text: (data.state == 'Activo' ? 'El tipo de visa ha sido Activado con éxito.' : 'El tipo de visa ha sido desactivado con éxito.'),\r\n          timer: 2500,\r\n          showCancel: false\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"card-title\">\r\n            <button class=\"btn btn-sm btn-primary\" style=\"float: right;\" (click)=\"openModal()\">\r\n               <i class=\"fa fa-plus\"></i> Agregar\r\n            </button>\r\n            <h5 class=\"text-primary\">Tipos de Visa</h5>\r\n        </div>\r\n        <hr class=\"bg-primary\">\r\n        <table class=\"table table-borderless table-striped\" *ngIf=\"!loading && visas.length > 0; else notData\">\r\n            <thead class=\"bg-light\">\r\n                <tr>\r\n                    <th>Nombre</th>\r\n                    <th>Proposito</th>\r\n                    <th class=\"text-center\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of visas\" [ngClass]=\"{'text-danger font-weight-bold': (item.state == 'Inactivo')}\">\r\n                    <td> {{ item.name }} </td>\r\n                    <td> {{ item.purpose }} </td>\r\n                    <td>\r\n                        <div class=\"text-center\">\r\n                            <div ngbDropdown class=\"dropdown-primary\">\r\n                                <button ngbDropdownToggle class=\"btn btn-primary btn-sm waves-effect waves-light \" type=\"button\">\r\n                                    <i class=\"mdi mdi-chevron-down\"></i>\r\n                                </button>\r\n                                <div ngbDropdownMenu>\r\n                                    <a class=\"dropdown-item waves-light text-info waves-effect caja-botones\" (click)=\"getVisaType(item); modal.show()\">\r\n                                        <i class=\"far fa-edit\"></i> Editar\r\n                                    </a>\r\n                                    <a *ngIf=\"item.state == 'Inactivo'\" class=\"dropdown-item waves-light text-success waves-effect\" (click)=\"activateOrInactivate(item, 'Activo')\">\r\n                                        <i class=\"fas fa-check\"></i> Activar\r\n                                    </a>\r\n                                    <a *ngIf=\"item.state == 'Activo'\" class=\"dropdown-item waves-light text-danger waves-effect\" (click)=\"activateOrInactivate(item, 'Inactivo')\">\r\n                                        <i class=\"fas fa-trash-alt\"></i> Anular\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <ngb-pagination class=\"d-flex justify-content-center pagination-rounded pagination-sm\" [collectionSize]=\"pagination.collectionSize\" [pageSize]=\"pagination.pageSize\" [(page)]=\"pagination.page\" (pageChange)=\"getVisaTypes($event)\" aria-label=\"Default pagination\"\r\n            maxSize=\"5\" rotate=\"true\" ellipses=\"false\" boundaryLinks=\"true\" rotate=\"true\" ellipses=\"false\" boundaryLinks=\"true\">\r\n        </ngb-pagination>\r\n    </div>\r\n</div>\r\n<app-modal-basic #modal [dialogClass]=\"'modal-md'\">\r\n    <div class=\"app-modal-header\">\r\n        <h5 class=\"modal-title\"> {{ title }} </h5>\r\n        <button type=\"button\" class=\"close basic-close\" (click)=\"modal.hide(); form.reset()\">\r\n            <span aria-hidden=\"true\">\r\n              <i class=\"fas fa-times\" (click)=\"modal.hide(); form.reset()\"></i>\r\n            </span>\r\n        </button>\r\n    </div>\r\n    <div class=\"app-modal-body\">\r\n        <form [formGroup]=\"form\">\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-6\">\r\n                    <label class=\"custom-label\" for=\"\">Nombre</label>\r\n                    <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"name\">\r\n                </div>\r\n                <div class=\"form-group col-md-6\">\r\n                    <label class=\"custom-label\" for=\"\">Proposito</label>\r\n                    <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"purpose\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"app-modal-footer\">\r\n        <div class=\"form-group text-right\">\r\n            <button (click)=\"modal.hide(); form.reset()\" type=\"button\" class=\"btn btn-danger raised mr-2 btn-sm\">Cerrar</button>\r\n            <button type=\"submit\" class=\"btn btn-primary btn-sm raised\" [disabled]=\"!form.valid\" (click)=\"save()\">Guardar</button>\r\n        </div>\r\n    </div>\r\n</app-modal-basic>\r\n<ng-template #notData>\r\n    <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TiposConsultaService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    paginate(params = {}) {\r\n        return this.http.get(`${environment.base_url}/sub-type-appointments-paginate`, {params})\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposEgresoService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n  \r\n  getEgresstype( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateEgressTypes`, {params});\r\n  }\r\n\r\n  createEgressType( data:any ) {\r\n    return this.http.post(`${environment.base_url}/egress_types`, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TiposEgresoService } from './tipos-egreso.service';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport Swal from 'sweetalert2';\r\nimport { consts } from '../../../../core/utils/consts';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-egreso',\r\n  templateUrl: './tipos-egreso.component.html',\r\n  styleUrls: ['./tipos-egreso.component.scss']\r\n})\r\nexport class TiposEgresoComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  egresss: any[] = [];\r\n  egress: any = {};\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtro: any = {\r\n    name: ''\r\n  }\r\n  form: FormGroup;\r\n  egressTypes = consts.Egresstypes;\r\n  constructor(\r\n    private _egressTypeService: TiposEgresoService,\r\n    private _validators: ValidatorsService,\r\n    private fb: FormBuilder,\r\n    private _swal: SwalService,\r\n    private _modal: ModalService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEgressType();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this._modal.open(content);\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de egreso';\r\n  }\r\n\r\n  getEgress(egress) {\r\n    this.egress = { ...egress }\r\n    this.selected = 'Actualizar tipo de egreso';\r\n    this.form.patchValue({\r\n      id: this.egress.id,\r\n      name: this.egress.name,\r\n      associated_account: this.egress.associated_account,\r\n      type: this.egress.type\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.egress.id],\r\n      name: ['', this._validators.required],\r\n      associated_account: ['', this._validators.required],\r\n      type: ['', this._validators.required]\r\n    });\r\n  }\r\n\r\n  getEgressType(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtro\r\n    }\r\n    this.loading = true;\r\n    this._egressTypeService.getEgresstype(params)\r\n      .subscribe((res: any) => {\r\n        this.egresss = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  createEgressType() {\r\n    this._egressTypeService.createEgressType(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this._modal.close();\r\n        this.getEgressType();\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: res.data,\r\n          showCancel: false,\r\n          text: '',\r\n          timer: 1000\r\n        })\r\n      })\r\n  }\r\n\r\n  activateOrInactivate(novelty, status) {\r\n    let data = {\r\n      id: novelty.id,\r\n      status\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: (status === 'Inactivo' ? 'El tipo de egreso se anulará' : 'El tipo de egreso se activará'),\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._egressTypeService.createEgressType(data)\r\n          .subscribe(res => {\r\n            this.getEgressType();\r\n            this._swal.show({\r\n              icon: 'success',\r\n              title: (status === 'Inactivo' ? 'Tipo de egreso anulado' : 'Tipo de egreso activado'),\r\n              showCancel: false,\r\n              text: (status === 'Inactivo' ? 'El tipo de egreso ha sido anulado con éxito.' : 'El tipo de egreso ha sido activado con éxito.'),\r\n              timer: 1000\r\n            })\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de egreso</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(add)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n            <mat-form-field class=\"col\" appearance=\"outline\">\r\n              <mat-label>Nombre</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                matInput\r\n                [(ngModel)]=\"filtro.name\"\r\n                (input)=\"getEgressType()\"\r\n                name=\"name\"\r\n                autocomplete=\"off\"\r\n                placeholder=\"Busca por nombre\"\r\n              />\r\n            </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && egresss.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre</th>\r\n            <th>Cuenta Asociada</th>\r\n            <th>Tipo</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let egress of egresss\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': egress.status == 'Inactivo'\r\n            }\"\r\n          >\r\n            <td class=\"text-left\">{{ egress.name }}</td>\r\n            <td>{{ egress.associated_account }}</td>\r\n            <td>{{ egress.type }}</td>\r\n            <td>\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"openModal(add); getEgress(egress)\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"egress.status == 'Activo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(egress, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"egress.status == 'Inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(egress, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getEgressType($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"_modal.close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta asociada</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa la cuenta asociada\"\r\n            formControlName=\"associated_account\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Tipo</mat-label>\r\n          <mat-select formControlName=\"type\" required>\r\n            <mat-option *ngFor=\"let type of egressTypes\" [value]=\"type.valor\">\r\n              {{ type.clave }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"_modal.close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createEgressType()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tipos-rechazo',\r\n  templateUrl: './tipos-rechazo.component.html',\r\n  styleUrls: ['./tipos-rechazo.component.scss']\r\n})\r\nexport class TiposRechazoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tipos-rechazo works!</p>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TiposAgendaService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    paginate(params = {}) {\r\n        return this.http.get(`${environment.base_url}/type-appointments-paginate`, { params })\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-tipoactivofijo',\r\n  templateUrl: './tipoactivofijo.component.html',\r\n  styleUrls: ['./tipoactivofijo.component.scss']\r\n})\r\nexport class TipoactivofijoComponent implements OnInit {\r\n  \r\n  @ViewChild('alertSwal') alertSwal:SwalComponent;\r\n\r\n  public DatosCabecera:any = {\r\n    Titulo: 'Tipo Contrato',\r\n    Fecha: new Date()\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  MostrarMensajeHijo(msgObj:any){\r\n    this.ShowSwal(msgObj.type, msgObj.title, msgObj.msg);\r\n  }\r\n\r\n  ShowSwal(tipo, titulo:string, msg:string){\r\n    this.alertSwal.icon = tipo;\r\n    this.alertSwal.title = titulo;\r\n    this.alertSwal.text = msg;\r\n    this.alertSwal.fire();\r\n  }\r\n\r\n}\r\n","<swal #alertSwal title=\"\" text=\"\" type=\"\"></swal>\r\n\r\n<div class=\"card\">\r\n    <app-tablatipoactivofijo (MostrarSwal)=\"MostrarMensajeHijo($event)\">\r\n    </app-tablatipoactivofijo>\r\n</div>\r\n<!-- <div class=\"container-fluid\">\r\n</div> -->","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposAnulacionService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tipos-estado-financiero',\r\n  templateUrl: './tipos-estado-financiero.component.html',\r\n  styleUrls: ['./tipos-estado-financiero.component.scss']\r\n})\r\nexport class TiposEstadoFinancieroComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>tipos-estado-financiero works!</p>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposVisaService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n  \r\n  getVisaTypes( params = {} ){\r\n    return this.http.get(`${environment.base_url}/paginateVisaTypes`, {params});\r\n  }\r\n\r\n  save(data:any){\r\n    return this.http.post(`${environment.base_url}/visa-types`, data);\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TiposRiesgoComponent } from './tipos-riesgo/tipos-riesgo.component';\r\nimport { TiposNovedadesComponent } from \"./tipos-novedades/tipos-novedades.component\";\r\nimport { TiposEgresoComponent } from './tipos-egreso/tipos-egreso.component';\r\nimport { TiposIngresoComponent } from './tipos-ingreso/tipos-ingreso.component';\r\nimport { TiposRetencionesComponent } from './tipos-retenciones/tipos-retenciones.component';\r\nimport { TipoactivofijoComponent } from './tipoactivofijo/tipoactivofijo.component';\r\nimport { ContratoComponent } from \"./contrato/contrato.component\";\r\n\r\n\r\nconst routes : Routes = [\r\n    { path: 'contrato' , component: ContratoComponent },\r\n    { path: 'tipos-riesgo' , component: TiposRiesgoComponent },\r\n    { path: 'tipos-novedad' , component: TiposNovedadesComponent },\r\n    { path: 'tipos-egreso' , component: TiposEgresoComponent },\r\n    { path: 'tipos-ingreso' , component: TiposIngresoComponent },\r\n    { path: 'tipos-activo-fijo' , component: TipoactivofijoComponent },\r\n    { path: 'tipos-retenciones' , component: TiposRetencionesComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class TiposRoutingModule{}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposRetencionesService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getRetentionType( params = {} ){\r\n    return this.http.get(`${environment.base_url}/paginateRetentionType`, {params})\r\n  }\r\n\r\n  updateOrCreateRetentionType( data:any ){\r\n    return this.http.post(`${environment.base_url}/retention-type`, data);\r\n  }\r\n\r\n  getAccountPlan(){\r\n    return this.http.get(`${environment.base_url}/account-plan`);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatAccordion } from '@angular/material';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { TiposTerminosService } from './tipos-terminos.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-termino',\r\n  templateUrl: './tipos-termino.component.html',\r\n  styleUrls: ['./tipos-termino.component.scss']\r\n})\r\nexport class TiposTerminoComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll();\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll();\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n\r\n  loading: boolean = false;\r\n  selected: any;\r\n  lists: any;\r\n  terms: any[] = [];\r\n  form: FormGroup;\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    collectionSize: 0\r\n  }\r\n  filtro: any = {\r\n    name: ''\r\n  }\r\n  term: any = {};\r\n\r\n  constructor(\r\n    private _typesTermsService: TiposTerminosService,\r\n    private fb: FormBuilder,\r\n    private _reactiveValid: ValidatorsService,\r\n    private _swal: SwalService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTermsTypes();\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.term.id],\r\n      name: ['', this._reactiveValid.required]\r\n    })\r\n  }\r\n\r\n  getTermsTypes(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtro\r\n    }\r\n    this.loading = true;\r\n    this._typesTermsService.getTermsTypes(params)\r\n      .subscribe((res: any) => {\r\n        this.loading = false;\r\n        this.terms = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n      });\r\n  }\r\n\r\n\r\n  openConfirm(confirm, titulo) {\r\n    this.selected = titulo;\r\n    this._modal.open(confirm, 'sm')\r\n    this.form.reset()\r\n  }\r\n\r\n  close() {\r\n    this._modal.close()\r\n  }\r\n\r\n  getData(data) {\r\n    this.term = { ...data };\r\n    this.form.patchValue({\r\n      id: this.term.id,\r\n      name: this.term.name\r\n    });\r\n  }\r\n\r\n  activateOrInactivate(contract, status) {\r\n    let data = {\r\n      id: contract.id,\r\n      name: contract.name,\r\n      status\r\n    }\r\n    this._swal.show({\r\n      title: '¿Estás seguro(a)?',\r\n      text: (status === 'inactivo' ? '¡El salario se inactivará!' : '¡El salario se activará!'),\r\n      icon: 'question',\r\n      showCancel: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._typesTermsService.createTermType(data)\r\n          .subscribe(res => {\r\n            this.getTermsTypes();\r\n            this._swal.show({\r\n              title: (status === 'inactivo' ? '¡Salario inhabilitado!' : '¡Salario activado!'),\r\n              text: (status === 'inactivo' ? 'El salario ha sido inhabilitado con éxito.' : 'El salario ha sido activado con éxito.'),\r\n              icon: 'success',\r\n              showCancel: false,\r\n              timer: 1000\r\n            })\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  createSalaryType() {\r\n    this._typesTermsService.createTermType(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this.getTermsTypes();\r\n        this._modal.close()\r\n        this._swal.show({\r\n          title: res.data.name,\r\n          icon: 'success',\r\n          text: 'Término creado exitosamente',\r\n          timer: 1000,\r\n          showCancel: false\r\n        })\r\n      }, err => {\r\n        this._swal.show({\r\n          title: 'ERROR',\r\n          text: 'Intenta nuevamente',\r\n          icon: 'error',\r\n          showCancel: false,\r\n        })\r\n      }\r\n      )\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h5 class=\"text-primary\">Términos del contrato</h5>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n         <!--  <button\r\n            class=\"btn btn-primary btn-sm\"\r\n            (click)=\"openConfirm(add, 'Nuevo tipo de término')\"\r\n          >\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button> -->\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <!---acordeon de filtros--->\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [(ngModel)]=\"filtro.name\"\r\n              (input)=\"getTermsTypes()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n              placeholder=\"Busca por nombre\"\r\n            />\r\n          </mat-form-field>\r\n          <!--  <ng-select class=\"mr-1\" [items]=\"lists\" [(ngModel)]=\"filtro.name\" (change)=\"getSalaryTypes()\" name=\"name\" bindLabel=\"text\" bindValue=\"value\" loadingText=\"loading\" ngDefaultControl>\r\n                        </ng-select> -->\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && terms.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Tipos de Términos</th>\r\n            <!-- <th><i class=\"mdi mdi-chevron-down\"></i></th> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let term of terms\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': term.status === 'inactivo'\r\n            }\"\r\n          >\r\n            <td class=\"align-middle\">{{ term.name }}</td>\r\n            <!-- <td class=\"align-middle\">\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item waves-light text-info caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"\r\n                      openConfirm(add, 'Actualizar tipo de término');\r\n                      getData(term)\r\n                    \"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"term.status == 'activo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(term, 'inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"term.status == 'inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(term, 'activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <!-- Close Card Body -->\r\n\r\n  <!--pagiancion-->\r\n  <ngb-pagination\r\n    class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n    [collectionSize]=\"pagination.collectionSize\"\r\n    [pageSize]=\"pagination.pageSize\"\r\n    [(page)]=\"pagination.page\"\r\n    (pageChange)=\"getTermsTypes($event)\"\r\n    aria-label=\"Default pagination\"\r\n    maxSize=\"5\"\r\n    rotate=\"true\"\r\n    ellipses=\"false\"\r\n    boundaryLinks=\"true\"\r\n  >\r\n  </ngb-pagination>\r\n</div>\r\n\r\n<!--modal para nuevo-->\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error *ngIf=\"name_invalid\">Campo necesario</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createSalaryType()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { consts } from '../../../../core/utils/consts';\r\nimport { TiposIngresoService } from './tipos-ingreso.service';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { SwalService } from '../../informacion-base/services/swal.service';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-ingreso',\r\n  templateUrl: './tipos-ingreso.component.html',\r\n  styleUrls: ['./tipos-ingreso.component.scss']\r\n})\r\nexport class TiposIngresoComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n\r\n  loading: boolean = false;\r\n  selected: any;\r\n  ingresss: any[] = [];\r\n  ingress: any = {};\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtro: any = {\r\n    name: ''\r\n  }\r\n  form: FormGroup;\r\n  ingressTypes = consts.Ingresstypes;\r\n  constructor(\r\n    private _ingressTypeService: TiposIngresoService,\r\n    private _validators: ValidatorsService,\r\n    private fb: FormBuilder,\r\n    private _swal: SwalService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getIngressType();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this._modal.open(content);\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de ingreso';\r\n  }\r\n\r\n  getIngress(egress) {\r\n    this.ingress = { ...egress }\r\n    this.selected = 'Actualizar tipo de ingreso'\r\n    this.form.patchValue({\r\n      id: this.ingress.id,\r\n      name: this.ingress.name,\r\n      associated_account: this.ingress.associated_account,\r\n      type: this.ingress.type\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.ingress.id],\r\n      name: ['', this._validators.required],\r\n      associated_account: ['', this._validators.required],\r\n      type: ['', this._validators.required]\r\n    });\r\n  }\r\n\r\n  getIngressType(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtro\r\n    }\r\n    this.loading = true;\r\n    this._ingressTypeService.getIngressType(params)\r\n      .subscribe((res: any) => {\r\n        this.ingresss = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  createIngressType() {\r\n    this._ingressTypeService.createIngressType(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this._modal.close();\r\n        this.getIngressType();\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: res.data,\r\n          showCancel: false,\r\n          text: '',\r\n          timer: 1000\r\n        })\r\n      })\r\n  }\r\n\r\n  activateOrInactivate(novelty, status) {\r\n    let data = {\r\n      id: novelty.id,\r\n      status\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: (status === 'Inactivo' ? 'El tipo de ingreso se anulará' : 'El tipo de ingreso se activará'),\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._ingressTypeService.createIngressType(data)\r\n          .subscribe(res => {\r\n            this.getIngressType();\r\n            this._swal.show({\r\n              icon: 'success',\r\n              title: (status === 'Inactivo' ? 'Tipo de ingreso anulado' : 'Tipo de ingreso activado'),\r\n              showCancel: false,\r\n              text: (status === 'Inactivo' ? 'El tipo de ingreso ha sido anulado con éxito.' : 'El tipo de ingreso ha sido activado con éxito.'),\r\n              timer: 1000\r\n            })\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de ingreso</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(add)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [(ngModel)]=\"filtro.name\"\r\n              (input)=\"getIngressType()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n              placeholder=\"Busca por nombre\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && ingresss.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Nombre</th>\r\n            <th>Cuenta Asociada</th>\r\n            <th>Tipo</th>\r\n            <th><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let ingress of ingresss\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': ingress.status == 'Inactivo'\r\n            }\"\r\n          >\r\n            <td class=\"text-left\">{{ ingress.name | uppercase }}</td>\r\n            <td>{{ ingress.associated_account }}</td>\r\n            <td>{{ ingress.type }}</td>\r\n            <td>\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript: void(0);\"\r\n                    (click)=\"openModal(add); getIngress(ingress)\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"ingress.status == 'Activo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(ingress, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"ingress.status == 'Inactivo'\"\r\n                    href=\"javascript: void(0);\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(ingress, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getIngressType($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"_modal.close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta asociada</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa la cuenta asociada\"\r\n            formControlName=\"associated_account\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Tipo</mat-label>\r\n          <mat-select formControlName=\"type\" required>\r\n            <mat-option *ngFor=\"let type of ingressTypes\" [value]=\"type.valor\">\r\n              {{ type.clave }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"_modal.close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createIngressType()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ViewEncapsulation, ElementRef } from '@angular/core';\r\nimport { Observable, of, OperatorFunction } from 'rxjs';\r\nimport { debounceTime, map, distinctUntilChanged, switchMap, filter, tap, catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TiposAnulacionService } from '../../tipos-anulacion/tipos-anulacion.service';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SwalService } from '../../../informacion-base/services/swal.service';\r\nimport { NgbModal, NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-tablatipoactivofijo',\r\n  templateUrl: './tablatipoactivofijo.component.html',\r\n  styleUrls: ['./tablatipoactivofijo.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TablatipoactivofijoComponent implements OnInit {\r\n\r\n  @Output() MostrarSwal:EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild('ModalTipoActivo') ModalTipoActivo:any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n\r\n  matPanel = false;\r\n  buscandoCuenta = {\r\n    planCuenta: false,\r\n    planCuentaDepreciacion: false,\r\n    planCuentaDepreciacionCredito: false\r\n  };\r\n  busquedaCuentaFallida = {\r\n    planCuenta: false,\r\n    planCuentaDepreciacion: false,\r\n    planCuentaDepreciacionCredito: false\r\n  };\r\n  title: any = '';\r\n  form: FormGroup;\r\n  accountPlan: any[] = [];\r\n\r\n  private campoEnfocado: string;\r\n\r\n  public Cargando:boolean = false;\r\n  public TiposActivosFijos:Array<any> = [];\r\n  public tipoActivosFijos:any = {};\r\n  // public Funcionario:any = JSON.parse(localStorage['User']);\r\n /*  public SwalDataObj:any = {\r\n    icon: 'warning',\r\n    title: 'Alerta',\r\n    msg: 'Default'\r\n  }; */\r\n  /* public TipoActivoModel:any = {\r\n    Nombre_Tipo_Activo: '',\r\n    Categoria: '',\r\n    Vida_Util: '',\r\n    Vida_Util_PCGA: '',\r\n    Porcentaje_Depreciacion_Anual: '',\r\n    Porcentaje_Depreciacion_Anual_PCGA: '',\r\n    Id_Plan_Cuenta_Depreciacion_NIIF: '',\r\n    Id_Plan_Cuenta_Depreciacion_PCGA: '',\r\n    Id_Plan_Cuenta_NIIF: '',\r\n    Id_Plan_Cuenta_PCGA: '',\r\n    Id_Plan_Cuenta_Credito_Depreciacion_PCGA: '',\r\n    Id_Plan_Cuenta_Credito_Depreciacion_NIIF: ''\r\n  }; */\r\n  public Filtros:any = {\r\n    nombre:'',\r\n    categoria:'',\r\n    vida_util:'',\r\n    depreciacion:''\r\n  };\r\n  //public CuentaCreditoDepreciacionPcga:any='';\r\n  public CuentaCreditoDepreciacionNiif:any='';\r\n  public CuentaDepreciacionNiif:any = '';\r\n  //public CuentaDepreciacionPcga:any = '';\r\n  public CuentaNiif:any = '';\r\n  //public CuentaPcga:any = '';\r\n\r\n  //Paginación\r\n  public maxSize = 5;\r\n  public pageSize = 10;\r\n  public TotalItems:number;\r\n  public page = 1;\r\n  public InformacionPaginacion:any = {\r\n    desde: 0,\r\n    hasta: 0,\r\n    total: 0\r\n  }\r\n\r\n  constructor(\r\n    // private tipoActivoService:TipoactivofijoService,\r\n    // private generalService:GeneralService,\r\n    // private planService:PlancuentaService,\r\n    private fb: FormBuilder,\r\n    private _swal: SwalService,\r\n    private modalService: NgbModal,\r\n    private http: HttpClient,\r\n    private _test: TiposAnulacionService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ConsultaFiltrada();\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      Id_Tipo_Activo_Fijo: [this.tipoActivosFijos.Id_Tipo_Activo_Fijo],\r\n      Nombre_Tipo_Activo: ['', Validators.required],\r\n      Categoria: ['Seleccione', Validators.required],\r\n      Vida_Util: ['', Validators.required],\r\n      Vida_Util_PCGA: ['', Validators.required],\r\n      Porcentaje_Depreciacion_Anual: ['', Validators.required],\r\n      Porcentaje_Depreciacion_Anual_PCGA: ['', Validators.required],\r\n      Id_Plan_Cuenta_Depreciacion_NIIF: ['', Validators.required],\r\n      Id_Plan_Cuenta_Depreciacion_PCGA: ['', Validators.required],\r\n      Id_Plan_Cuenta_NIIF: ['', Validators.required],\r\n      Id_Plan_Cuenta_PCGA: ['', Validators.required],\r\n      Id_Plan_Cuenta_Credito_Depreciacion_NIIF: ['', Validators.required],\r\n      Id_Plan_Cuenta_Credito_Depreciacion_PCGA: ['', Validators.required],\r\n      //Id_Plan_Cuenta_Debito_Depreciacion_NIIF: ['', Validators.required],\r\n      //Id_Plan_Cuenta_Debito_Depreciacion_PCGA: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  openClose(){\r\n    if (this.matPanel == false){\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n\r\n  selCampoEnfocado(tipo){\r\n    this.campoEnfocado=tipo;\r\n  }\r\n\r\n  gettipoActivosFijos(tipoActivosFijos) {\r\n    this.tipoActivosFijos = { ...tipoActivosFijos };\r\n    this.form.patchValue({\r\n      Id_Tipo_Activo_Fijo: this.tipoActivosFijos.Id_Tipo_Activo_Fijo,\r\n      Nombre_Tipo_Activo: this.tipoActivosFijos.Nombre_Tipo_Activo,\r\n      Categoria: this.tipoActivosFijos.Categoria,\r\n      Vida_Util: this.tipoActivosFijos.Vida_Util,\r\n      Vida_Util_PCGA: this.tipoActivosFijos.Vida_Util,\r\n      //Vida_Util_PCGA: this.tipoActivosFijos.Vida_Util_PCGA,\r\n      Porcentaje_Depreciacion_Anual: this.tipoActivosFijos.Porcentaje_Depreciacion_Anual,\r\n      Porcentaje_Depreciacion_Anual_PCGA: this.tipoActivosFijos.Porcentaje_Depreciacion_Anual,\r\n      //Porcentaje_Depreciacion_Anual_PCGA: this.tipoActivosFijos.Porcentaje_Depreciacion_Anual_PCGA,\r\n      Id_Plan_Cuenta_Depreciacion_NIIF: this.tipoActivosFijos.Id_Plan_Cuenta_Depreciacion_NIIF,\r\n      Id_Plan_Cuenta_Depreciacion_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_Depreciacion_NIIF,\r\n      //Id_Plan_Cuenta_Depreciacion_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_Depreciacion_PCGA,\r\n      Id_Plan_Cuenta_NIIF: this.tipoActivosFijos.Id_Plan_Cuenta_NIIF,\r\n      Id_Plan_Cuenta_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_NIIF,\r\n      //Id_Plan_Cuenta_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_PCGA,\r\n      Id_Plan_Cuenta_Credito_Depreciacion_NIIF: this.tipoActivosFijos.Id_Plan_Cuenta_Credito_Depreciacion_NIIF,\r\n      Id_Plan_Cuenta_Credito_Depreciacion_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_Credito_Depreciacion_NIIF,\r\n      //Id_Plan_Cuenta_Credito_Depreciacion_PCGA: this.tipoActivosFijos.Id_Plan_Cuenta_Credito_Depreciacion_PCGA\r\n    });\r\n    this.CuentaNiif=this.tipoActivosFijos.Cuenta_Niif;\r\n    this.CuentaDepreciacionNiif=this.tipoActivosFijos.Cuenta_Depreciacion_NIIF;\r\n    this.CuentaCreditoDepreciacionNiif=this.tipoActivosFijos.Cuenta_Credito_Niif;\r\n  }\r\n\r\n  closeResult = '';\r\n  public openConfirm(confirm, titulo) {\r\n    this.title = titulo;\r\n    this.modalService.open(confirm, { ariaLabelledBy: 'modal-basic-title', size: 'md', scrollable: true }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n    console.log(this.CuentaNiif);\r\n  }\r\n  private getDismissReason(reason: any) {\r\n    this.form.reset();\r\n    this.CuentaNiif='';\r\n    this.CuentaCreditoDepreciacionNiif='';\r\n    this.CuentaDepreciacionNiif='';\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  activateOrInactivate(tipoActivo,estado) {\r\n    let dataEstadoTipo = {\r\n      Id_Tipo_Activo_Fijo: tipoActivo.Id_Tipo_Activo_Fijo,\r\n      Estado: estado\r\n    }\r\n    let data = new FormData();\r\n    data.append(\"modelo\", this.normalize(JSON.stringify(dataEstadoTipo)));\r\n\r\n    this._swal.show({\r\n      title: '¿Estás seguro(a)?',\r\n      text: (tipoActivo.Estado == 'Activo' ? '¡El tipo de activo será desactivado!' : '¡El tipo de activo será activado'),\r\n      icon: 'question',\r\n      showCancel: true\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n          this.http.post(environment.ruta+'php/tipoactivo/guardar_tipo_activo.php', data).subscribe((r: any) => {\r\n          this._swal.show({\r\n            icon: 'success',\r\n            title: 'Tarea completada con éxito!',\r\n            text: (tipoActivo.Estado == 'Activo' ? 'El tipo de activo ha sido desactivado con éxito.' : 'El tipo de activo ha sido activado con éxito.'),\r\n            timer: 1000,\r\n            showCancel: false\r\n          })\r\n          this.ConsultaFiltrada(true,this.page);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  normalize = (function () {\r\n    var from = \"ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç\\n\\r'\",\r\n      to = \"AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuuNncc--*\",\r\n      mapping = {};\r\n\r\n    for (var i = 0, j = from.length; i < j; i++){\r\n\r\n      mapping[from.charAt(i)] = to.charAt(i);\r\n    }\r\n\r\n    return function (str) {\r\n      var ret = [];\r\n      for (var i = 0, j = str.length; i < j; i++) {\r\n\r\n        var c = str.charAt(i);\r\n        if (mapping.hasOwnProperty(str.charAt(i)))\r\n          ret.push(mapping[c]);\r\n        else\r\n          ret.push(c);\r\n      }\r\n      return ret.join('');\r\n    }\r\n\r\n  })();\r\n\r\n  calcularPorcentajeDepreciacion() {\r\n    let porcentaje = (100 / parseInt(this.form.value.Vida_Util)).toFixed(4);\r\n      this.form.patchValue({\r\n        Porcentaje_Depreciacion_Anual_PCGA: porcentaje,\r\n        Porcentaje_Depreciacion_Anual: porcentaje,\r\n        Vida_Util_PCGA: this.form.value.Vida_Util\r\n      })\r\n  }\r\n\r\n  GuardarTipoActivo(){\r\n    let data = new FormData();\r\n    let modelo = this.normalize(JSON.stringify(this.form.value));\r\n    data.append(\"modelo\", modelo);\r\n\r\n    this.http.post(environment.ruta+'php/tipoactivo/guardar_tipo_activo.php', data).subscribe((r: any) => {\r\n      if (r.codigo == 'success') {\r\n        this._swal.show({\r\n          icon: 'success',\r\n          title: 'Tarea completada con éxito!',\r\n          text: 'El tipo de activo ha sido registrado con éxito.',\r\n          timer: 1000,\r\n          showCancel: false\r\n        })\r\n        this.ConsultaFiltrada(true,this.page);\r\n        this.closeModal();\r\n      }\r\n    })\r\n  }\r\n\r\n  SetFiltros(paginacion:boolean) {\r\n\r\n    let params:any = {};\r\n\r\n    params.tam = this.pageSize;\r\n\r\n    if(paginacion === true){\r\n      params.pag = this.page;\r\n    }else{\r\n      this.page = 1; // Volver a la página 1 al filtrar\r\n      params.pag = this.page;\r\n    }\r\n\r\n    if (this.Filtros.nombre.trim() != \"\") {\r\n      params.nombre = this.Filtros.nombre;\r\n    }\r\n\r\n    if (this.Filtros.categoria.trim() != \"\") {\r\n      params.categoria = this.Filtros.categoria;\r\n    }\r\n\r\n    if (this.Filtros.vida_util.trim() != \"\") {\r\n      params.vida_util = this.Filtros.vida_util;\r\n    }\r\n\r\n    if (this.Filtros.depreciacion.trim() != \"\") {\r\n      params.depreciacion = this.Filtros.depreciacion;\r\n    }\r\n\r\n    let queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\r\n    return queryString;\r\n  }\r\n\r\n  ConsultaFiltrada(paginacion:boolean = false, event = 1) {\r\n    this.page = event;\r\n    var params = this.SetFiltros(paginacion);\r\n\r\n    if(params === ''){\r\n      this.ResetValues();\r\n      return;\r\n    }\r\n\r\n    this.Cargando = true;\r\n    this.http.get(environment.ruta+'php/tipoactivo/get_lista_tipo_activo.php?'+params).subscribe((data:any) => {\r\n      if (data.codigo == 'success') {\r\n        this.TiposActivosFijos = data.query_result;\r\n        this.TotalItems = data.numReg;\r\n      }else{\r\n        this.TiposActivosFijos = [];\r\n      }\r\n\r\n      this.Cargando = false;\r\n      this.SetInformacionPaginacion();\r\n    });\r\n  }\r\n\r\n  ResetValues(){\r\n    this.Filtros = {\r\n      nombre:'',\r\n      categoria:'',\r\n      vida_util:'',\r\n      depreciacion:''\r\n    };\r\n  }\r\n\r\n  SetInformacionPaginacion(){\r\n    var calculoHasta = (this.page*this.pageSize);\r\n    var desde = calculoHasta-this.pageSize+1;\r\n    var hasta = calculoHasta > this.TotalItems ? this.TotalItems : calculoHasta;\r\n\r\n    this.InformacionPaginacion['desde'] = desde;\r\n    this.InformacionPaginacion['hasta'] = hasta;\r\n    this.InformacionPaginacion['total'] = this.TotalItems;\r\n  }\r\n\r\n  //formatter1 = (x: { Nombre_Cuenta: string }) => x.Nombre_Cuenta;\r\n  formatter2 = (x: { Nombre_Niif: string }) => x.Nombre_Niif;\r\n  search_cuenta_niif = (text$: Observable<string>) =>\r\n  text$.pipe(\r\n    debounceTime(300),\r\n    distinctUntilChanged(),\r\n    tap(() => (this.buscandoCuenta[this.campoEnfocado] = true)),\r\n    switchMap(term =>\r\n      this.http.get<readonly string[]>(environment.ruta + \"php/plancuentas/filtrar_cuentas.php\", { params: { coincidencia: term, tipo: 'niif' }}).pipe(\r\n        tap(() => this.busquedaCuentaFallida[this.campoEnfocado] = false),\r\n        catchError(() => {\r\n          this.busquedaCuentaFallida[this.campoEnfocado] = true;\r\n          return of([]);\r\n        })\r\n      )\r\n    ),\r\n    tap(() => (this.buscandoCuenta[this.campoEnfocado] = false))\r\n  );\r\n\r\n  AsignarCuenta(e: NgbTypeaheadSelectItemEvent,tipo: string) {\r\n    this.form.get(tipo+'_NIIF').setValue(e.item.Id_Plan_Cuentas);\r\n    this.form.get(tipo+'_PCGA').setValue(e.item.Id_Plan_Cuentas);\r\n  }\r\n}\r\n","<div class=\"card-body\">\r\n  <div class=\"card-title d-flex justify-content-between\">\r\n    <div class=\"col-md-6 px-0\">\r\n      <h4 class=\"text-primary\">Tipos de activos fijos</h4>\r\n    </div>\r\n    <div class=\"col-md-6 px-0 text-right\">\r\n      <div class=\"btn-group rounded w-sm-100\">\r\n        <button\r\n          class=\"btn btn-primary btn-sm\"\r\n          (click)=\"openConfirm(add, 'Nuevo tipo de activo fijo')\"\r\n        >\r\n          <i class=\"fa fa-plus\"></i>\r\n          Agregar<!--  (click)=\"ModalTipoActivo.show();\" -->\r\n        </button>\r\n        <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n          <i class=\"fas fa-sliders-h\"></i> Filtros\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr class=\"line\" />\r\n  <mat-accordion multi>\r\n    <mat-expansion-panel class=\"mat-elevation-z0\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Busca por nombre\"\r\n            [(ngModel)]=\"Filtros.nombre\"\r\n            (input)=\"ConsultaFiltrada()\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Categoría</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Busca por categoría\"\r\n            [(ngModel)]=\"Filtros.categoria\"\r\n            (input)=\"ConsultaFiltrada()\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Vida útil</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Busca por vida útil (Número de meses)\"\r\n            [(ngModel)]=\"Filtros.vida_util\"\r\n            (input)=\"ConsultaFiltrada()\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Depreciación</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Busca por porcentaje de depreciación\"\r\n            [(ngModel)]=\"Filtros.depreciacion\"\r\n            (input)=\"ConsultaFiltrada()\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n  <div class=\"rounded-top table-responsive\">\r\n    <table\r\n      class=\"table table-bordered table-striped table-sm\"\r\n      *ngIf=\"!Cargando && TiposActivosFijos.length > 0; else notData\"\r\n    >\r\n      <thead class=\"bg-light\">\r\n        <tr class=\"text-center text-uppercase\">\r\n          <th class=\"align-middle\">Tipo Activo</th>\r\n          <th class=\"align-middle\">Categoría</th>\r\n          <th class=\"align-middle\">Vida Util</th>\r\n          <th class=\"align-middle\">% Depreciación</th>\r\n          <th class=\"align-middle\">Cuenta Depreciación</th>\r\n          <!-- <th class=\"align-middle\">Cuenta Depreciación PCGA</th> -->\r\n          <th class=\"align-middle\">Cuenta Activo</th>\r\n          <!-- <th class=\"align-middle\">Cuenta PCGA</th> -->\r\n          <!-- <th class=\"align-middle\">Cuenta Credito PCGA</th> -->\r\n          <th class=\"align-middle\">Cuenta Credito</th>\r\n          <th class=\"align-middle col-1\"><i class=\"mdi mdi-chevron-down\"></i></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          *ngFor=\"let taf of TiposActivosFijos\"\r\n          class=\"text-center\"\r\n          [ngClass]=\"{\r\n            'text-danger font-weight-bold': taf.Estado == 'Inactivo'\r\n          }\"\r\n        >\r\n          <td class=\"align-middle\">{{ taf.Nombre_Tipo_Activo }}</td>\r\n          <td class=\"align-middle\">{{ taf.Categoria }}</td>\r\n          <td class=\"align-middle\">\r\n            {{ taf.Vida_Util }} mes{{ taf.Vida_Util > 1 ? \"es\" : \"\" }}\r\n          </td>\r\n          <td class=\"align-middle\">\r\n            {{ taf.Porcentaje_Depreciacion_Anual }} %\r\n          </td>\r\n          <td class=\"align-middle\">{{ taf.Cuenta_Depreciacion_NIIF }}</td>\r\n          <!-- <td class=\"align-middle\">{{ taf.Cuenta_Depreciacion_PCGA }}</td> -->\r\n          <td class=\"align-middle\">{{ taf.Cuenta_Niif }}</td>\r\n          <!-- <td class=\"align-middle\">{{ taf.Cuenta_Pcga }}</td> -->\r\n          <!-- <td class=\"align-middle\">{{ taf.Cuenta_Credito_Pcga }}</td> -->\r\n          <td class=\"align-middle\">{{ taf.Cuenta_Credito_Niif }}</td>\r\n          <td class=\"align-middle\">\r\n            <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n              <button\r\n                ngbDropdownToggle\r\n                class=\"btn btn-primary btn-sm waves-light\"\r\n                type=\"button\"\r\n              >\r\n                <i class=\"mdi mdi-chevron-down\"></i>\r\n              </button>\r\n              <div ngbDropdownMenu>\r\n                <a\r\n                  class=\"dropdown-item waves-light text-info caja-botones\"\r\n                  href=\"javascript: void(0);\"\r\n                  (click)=\"\r\n                    openConfirm(add, 'Editar tipo de activo fijo');\r\n                    gettipoActivosFijos(taf)\r\n                  \"\r\n                  ><!-- EditarTipoActivo(taf.Id_Tipo_Activo_Fijo); -->\r\n                  <i class=\"far fa-edit\"></i> Editar</a\r\n                >\r\n                <a\r\n                  *ngIf=\"taf.Estado == 'Activo'\"\r\n                  class=\"dropdown-item waves-light text-danger caja-botones\"\r\n                  href=\"javascript: void(0);\"\r\n                  (click)=\"activateOrInactivate(taf, 'Inactivo')\"\r\n                >\r\n                  <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                >\r\n                <a\r\n                  *ngIf=\"taf.Estado == 'Inactivo'\"\r\n                  class=\"dropdown-item waves-light text-success caja-botones\"\r\n                  href=\"javascript: void(0);\"\r\n                  (click)=\"activateOrInactivate(taf, 'Activo')\"\r\n                >\r\n                  <i class=\"fa fa-check\"></i> Activar</a\r\n                >\r\n                <!-- <a\r\n                  class=\"dropdown-item waves-light  caja-botones\"\r\n                  [swal]=\"{\r\n                    title: '¿Está Seguro?',\r\n                    text: 'Se dispone inactivar este tipo de activo fijo',\r\n                    type: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Si, Eliminar',\r\n                    cancelButtonText: 'No, Dejame Comprobar!'\r\n                  }\"\r\n                  (confirm)=\"EliminarTipoActivoFijo(taf)\"\r\n                >\r\n                  <i class=\"ti-trash\"></i> Eliminar</a\r\n                > -->\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <ngb-pagination\r\n    *ngIf=\"TiposActivosFijos.length > 0\"\r\n    class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n    [collectionSize]=\"TotalItems\"\r\n    [pageSize]=\"pageSize\"\r\n    [(page)]=\"page\"\r\n    (pageChange)=\"ConsultaFiltrada(true, $event)\"\r\n    aria-label=\"Default pagination\"\r\n    [maxSize]=\"maxSize\"\r\n    rotate=\"true\"\r\n    ellipses=\"false\"\r\n    boundaryLinks=\"true\"\r\n  >\r\n  </ngb-pagination>\r\n</div>\r\n\r\n<ng-template #add let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ title }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"Nombre_Tipo_Activo\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Categoría</mat-label>\r\n          <mat-select formControlName=\"Categoria\">\r\n            <mat-option value=\"Tangible\">Tangible</mat-option>\r\n            <mat-option value=\"Intangible\">Intangible</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Vida útil PCGA (meses)</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            placeholder=\"Ingresa la vida útil\"\r\n            formControlName=\"Vida_Util_PCGA\"\r\n            required\r\n            (change)=\"calculateDepreciationPercentage('pcga')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field> -->\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Vida útil (meses)</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            placeholder=\"Ingresa la vida útil\"\r\n            formControlName=\"Vida_Util\"\r\n            required\r\n            (input)=\"calcularPorcentajeDepreciacion()\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Porcentaje de depreciación PCGA mensual</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            formControlName=\"Porcentaje_Depreciacion_Anual_PCGA\"\r\n            required\r\n            readonly\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field> -->\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Porcentaje de depreciación anual</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            formControlName=\"Porcentaje_Depreciacion_Anual\"\r\n            required\r\n            readonly\r\n            autocomplete=\"off\"\r\n          />\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Cuenta activo PCGA</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              formControlName=\"Id_Plan_Cuenta_PCGA\"\r\n              required\r\n              [ngbTypeahead]=\"search\"\r\n              [inputFormatter]=\"inputFormatBandListValue\"\r\n              [resultFormatter]=\"resultFormatBandListValue\"\r\n              [editable]=\"false\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field> -->\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta activo</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            required\r\n            [(value)]=\"CuentaNiif\"\r\n            [ngbTypeahead]=\"search_cuenta_niif\"\r\n            [resultTemplate]=\"rt2\"\r\n            [inputFormatter]=\"formatter2\"\r\n            [resultFormatter]=\"formatter2\"\r\n            [class.is-invalid]=\"busquedaCuentaFallida.planCuenta\"\r\n            (focus)=\"selCampoEnfocado('planCuenta')\"\r\n            (selectItem)=\"AsignarCuenta($event, 'Id_Plan_Cuenta')\"\r\n          />\r\n          <!-- value=\"{{tipoActivosFijos.Cuenta_Niif}}\" -->\r\n          <mat-hint *ngIf=\"buscandoCuenta.planCuenta\">Buscando...</mat-hint>\r\n          <div *ngIf=\"busquedaCuentaFallida.planCuenta\">\r\n            Lo lamentamos, las opciones no pudieron ser cargadas.\r\n          </div>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Cuenta débito depreciación PCGA</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              formControlName=\"Id_Plan_Cuenta_Debito_Depreciacion_PCGA\"\r\n              required\r\n              [ngbTypeahead]=\"search\"\r\n              [inputFormatter]=\"inputFormatBandListValue\"\r\n              [resultFormatter]=\"resultFormatBandListValue\"\r\n              [editable]=\"false\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field> -->\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta débito depreciación</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            required\r\n            autocomplete=\"off\"\r\n            [(value)]=\"CuentaDepreciacionNiif\"\r\n            [ngbTypeahead]=\"search_cuenta_niif\"\r\n            [resultTemplate]=\"rt2\"\r\n            [inputFormatter]=\"formatter2\"\r\n            [resultFormatter]=\"formatter2\"\r\n            [class.is-invalid]=\"busquedaCuentaFallida.planCuentaDepreciacion\"\r\n            (focus)=\"selCampoEnfocado('planCuentaDepreciacion')\"\r\n            (selectItem)=\"AsignarCuenta($event, 'Id_Plan_Cuenta_Depreciacion')\"\r\n          />\r\n          <mat-hint *ngIf=\"buscandoCuenta.planCuentaDepreciacion\"\r\n            >Buscando...</mat-hint\r\n          >\r\n          <div *ngIf=\"busquedaCuentaFallida.planCuentaDepreciacion\">\r\n            Lo lamentamos, las opciones no pudieron ser cargadas.\r\n          </div>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Cuenta crédito depreciación PCGA</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              formControlName=\"Id_Plan_Cuenta_Credito_Depreciacion_PCGA\"\r\n              required\r\n              [ngbTypeahead]=\"search\"\r\n              [inputFormatter]=\"inputFormatBandListValue\"\r\n              [resultFormatter]=\"resultFormatBandListValue\"\r\n              [editable]=\"false\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field> -->\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Cuenta crédito depreciación</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            required\r\n            autocomplete=\"off\"\r\n            [(value)]=\"CuentaCreditoDepreciacionNiif\"\r\n            [ngbTypeahead]=\"search_cuenta_niif\"\r\n            [resultTemplate]=\"rt2\"\r\n            [inputFormatter]=\"formatter2\"\r\n            [resultFormatter]=\"formatter2\"\r\n            typeahead-append-to-body=\"true\"\r\n            [class.is-invalid]=\"\r\n              busquedaCuentaFallida.planCuentaDepreciacionCredito\r\n            \"\r\n            (focus)=\"selCampoEnfocado('planCuentaDepreciacionCredito')\"\r\n            (selectItem)=\"\r\n              AsignarCuenta($event, 'Id_Plan_Cuenta_Credito_Depreciacion')\r\n            \"\r\n          />\r\n          <mat-hint *ngIf=\"buscandoCuenta.planCuentaDepreciacionCredito\"\r\n            >Buscando...</mat-hint\r\n          >\r\n          <div *ngIf=\"busquedaCuentaFallida.planCuentaDepreciacionCredito\">\r\n            Lo lamentamos, las opciones no pudieron ser cargadas.\r\n          </div>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-danger\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"GuardarTipoActivo()\"\r\n      [disabled]=\"!form.valid\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"Cargando\"></app-not-data>\r\n</ng-template>\r\n\r\n<ng-template #rt1 let-r=\"result\" let-t=\"term\">\r\n  <span class=\"f-9\">{{ r.Codigo }} - {{ r.Nombre }} </span>\r\n</ng-template>\r\n<ng-template #rt2 let-r=\"result\" let-t=\"term\">\r\n  <span class=\"f-9\">{{ r.Codigo_Niif }} - {{ r.Nombre_Niif }}</span>\r\n</ng-template>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { TiposRoutingModule } from \"./tipos-routing.module\";\r\nimport { TiposAgendaComponent } from './tipos-agenda/tipos-agenda.component';\r\nimport { TiposConsultaComponent } from './tipos-consulta/tipos-consulta.component';\r\nimport { TiposContratoComponent } from './tipos-contrato/tipos-contrato.component';\r\nimport { TiposSalarioComponent } from './tipos-salario/tipos-salario.component';\r\nimport { TiposDocumentoComponent } from './tipos-documento/tipos-documento.component';\r\nimport { ComponentsModule } from '../../../components/components.module';\r\nimport { NgbDropdownModule, NgbPaginationModule, NgbTypeaheadModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PipesModule } from '../../../core/pipes/pipes.module';\r\nimport { TiposNovedadesComponent } from './tipos-novedades/tipos-novedades.component';\r\nimport { TiposGlosaComponent } from './tipos-glosa/tipos-glosa.component';\r\nimport { TiposRetencionesComponent } from './tipos-retenciones/tipos-retenciones.component';\r\nimport { TiposEgresoComponent } from './tipos-egreso/tipos-egreso.component';\r\nimport { TiposIngresoComponent } from './tipos-ingreso/tipos-ingreso.component';\r\nimport { TiposEstadoFinancieroComponent } from './tipos-estado-financiero/tipos-estado-financiero.component';\r\nimport { TiposAnulacionComponent } from './tipos-anulacion/tipos-anulacion.component';\r\nimport { TiposRechazoComponent } from './tipos-rechazo/tipos-rechazo.component';\r\n// import { TiposActivoFijoComponent } from './tipos-activo-fijo/tipos-activo-fijo.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TiposRiesgoComponent } from './tipos-riesgo/tipos-riesgo.component';\r\nimport { ProfesionesComponent } from './profesiones/profesiones.component';\r\nimport { TiposVisaComponent } from './tipos-visa/tipos-visa.component';\r\nimport { TipoactivofijoComponent } from './tipoactivofijo/tipoactivofijo.component';\r\nimport { TablatipoactivofijoComponent } from './tipoactivofijo/tablatipoactivofijo/tablatipoactivofijo.component';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ContratoComponent } from './contrato/contrato.component';\r\nimport { TiposTerminoComponent } from './tipos-termino/tipos-termino.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TiposAgendaComponent,\r\n        TiposConsultaComponent,\r\n        TiposContratoComponent,\r\n        TiposSalarioComponent,\r\n        TiposDocumentoComponent,\r\n        TiposNovedadesComponent,\r\n        TiposGlosaComponent,\r\n        TiposRetencionesComponent,\r\n        TiposEgresoComponent,\r\n        TiposIngresoComponent,\r\n        TiposEstadoFinancieroComponent,\r\n        TiposAnulacionComponent,\r\n        TiposRechazoComponent,\r\n        // TiposActivoFijoComponent,\r\n        TiposRiesgoComponent,\r\n        ProfesionesComponent,\r\n        TiposVisaComponent,\r\n        TipoactivofijoComponent,\r\n        TablatipoactivofijoComponent,\r\n        ContratoComponent,\r\n        TiposTerminoComponent\r\n    ],\r\n    imports: [\r\n        TiposRoutingModule,\r\n        ComponentsModule,\r\n        NgbDropdownModule,\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        PipesModule,\r\n        NgbPaginationModule,\r\n        NgSelectModule,\r\n        NgbTypeaheadModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        SweetAlert2Module.forRoot()\r\n    ],\r\n    exports: [\r\n        TiposAgendaComponent,\r\n        TiposConsultaComponent\r\n    ]\r\n})\r\n\r\nexport class TiposModule { }","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TiposSalarioService } from './tipos-salario.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ValidatorsService } from '../../informacion-base/services/reactive-validation/validators.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { ModalService } from 'src/app/core/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-salario',\r\n  templateUrl: './tipos-salario.component.html',\r\n  styleUrls: ['./tipos-salario.component.scss']\r\n})\r\nexport class TiposSalarioComponent implements OnInit {\r\n  @ViewChild('modal') modal: any;\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  isOpen: boolean = false;\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n  loading: boolean = false;\r\n  selected: any;\r\n  lists: any;\r\n  salaries: any[] = [];\r\n  form: FormGroup;\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 5,\r\n    collectionSize: 0\r\n  }\r\n  filtro: any = {\r\n    name: ''\r\n  }\r\n  salary: any = {};\r\n  constructor(\r\n    private _typesSalaryService: TiposSalarioService,\r\n    private fb: FormBuilder,\r\n    private _reactiveValid: ValidatorsService,\r\n    private _modal: ModalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalaryTypes();\r\n    this.createForm();\r\n  }\r\n\r\n  openModal(content) {\r\n    this._modal.open(content)\r\n    this.form.reset();\r\n    this.selected = 'Nuevo tipo de salario';\r\n  }\r\n\r\n  close() {\r\n    this._modal.close();\r\n    this.form.reset();\r\n  }\r\n\r\n  getData(data, content) {\r\n    this.salary = { ...data };\r\n    this.selected = 'Actualizar tipo de salario';\r\n    this._modal.open(content);\r\n    this.form.patchValue({\r\n      id: this.salary.id,\r\n      name: this.salary.name\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      id: [this.salary.id],\r\n      name: ['', this._reactiveValid.required]\r\n    })\r\n  }\r\n\r\n  getSalaryTypes(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtro\r\n    }\r\n    this.loading = true;\r\n    this._typesSalaryService.getSalaryTypes(params)\r\n      .subscribe((res: any) => {\r\n        this.loading = false;\r\n        this.salaries = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n      });\r\n  }\r\n\r\n\r\n  activateOrInactivate(contract, status) {\r\n    let data = {\r\n      id: contract.id,\r\n      status\r\n    }\r\n    Swal.fire({\r\n      title: '¿Estas seguro?',\r\n      text: (status === 'Inactivo' ? 'El Salario se inactivará!' : 'El Salario se activará'),\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonText: (status === 'Inactivo' ? 'Si, Inhabilitar' : 'Si, activar')\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this._typesSalaryService.createSalaryType(data)\r\n          .subscribe(res => {\r\n            this.getSalaryTypes();\r\n            Swal.fire({\r\n              title: (status === 'Inactivo' ? 'Salario Inhabilitado!' : 'Salario activado'),\r\n              text: (status === 'Inactivo' ? 'El Salario ha sido Inhabilitado con éxito.' : 'El Salario ha sido activado con éxito.'),\r\n              icon: 'success'\r\n            })\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  createSalaryType() {\r\n    this._typesSalaryService.createSalaryType(this.form.value)\r\n      .subscribe((res: any) => {\r\n        this.getSalaryTypes();\r\n        this.modal.hide();\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: res.data,\r\n          text: 'Se ha agregado a los Salarios con éxito'\r\n        })\r\n      })\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h5 class=\"text-primary\">Tipos de salarios</h5>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <!-- <button class=\"btn btn-primary btn-sm\" (click)=\"openModal(modal)\">\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button> -->\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre\"\r\n              [(ngModel)]=\"filtro.name\"\r\n              (input)=\"getSalaryTypes()\"\r\n              name=\"name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <!--  <ng-select class=\"mr-1\" [items]=\"lists\" [(ngModel)]=\"filtro.name\" (change)=\"getSalaryTypes()\" name=\"name\" bindLabel=\"text\" bindValue=\"value\" loadingText=\"loading\" ngDefaultControl>\r\n                    </ng-select> -->\r\n    <div class=\"rounded-top table-responsive\">\r\n      <table\r\n        class=\"table table-bordered table-striped table-sm\"\r\n        *ngIf=\"!loading && salaries.length > 0; else notData\"\r\n      >\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th>Tipos de Salario</th>\r\n            <!-- <th><i class=\"mdi mdi-chevron-down\"></i></th> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let salary of salaries\"\r\n            [ngClass]=\"{\r\n              'text-danger font-weight-bold': salary.status === 'Inactivo'\r\n            }\"\r\n          >\r\n            <td>{{ salary.name }}</td>\r\n            <!-- <td class=\"text-center\">\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript:void(0)\"\r\n                    (click)=\"getData(salary, modal)\"\r\n                    ><i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"salary.status == 'Activo'\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(salary, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"far fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"salary.status == 'Inactivo'\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"activateOrInactivate(salary, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getSalaryTypes($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #modal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"text-primary modal-title\">{{ selected }}</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      data-dismiss=\"modal\"\r\n      aria-label=\"Close\"\r\n      (click)=\"close()\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n        <mat-form-field appearance=\"outline\" class=\"col\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n            required\r\n          />\r\n          <mat-error *ngIf=\"name_invalid\">Es necesario el nombre</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"close()\">\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      [disabled]=\"!form.valid\"\r\n      (click)=\"createSalaryType()\"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      Guardar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposDocumentoService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getDocuments( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateDocumentType`, {params});\r\n  }\r\n\r\n  createNewDocument( data:any ) {\r\n    return this.http.post(`${environment.base_url}/documentTypes`, data)\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposTerminosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTermsTypeList(){\r\n    return this.http.get(`${environment.base_url}/contract-terms`);\r\n  }\r\n\r\n  //crear servicio que filtra\r\n  getTermsTypes(params = {}){\r\n    return this.http.get(`${environment.base_url}/paginate-contract-term`, {params});\r\n  }\r\n\r\n  createTermType(data: any) {\r\n    return this.http.post(`${environment.base_url}/contract-terms`, data);\r\n  }\r\n}","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-12 px-0\">\r\n        <h4 class=\"text-primary\">Tipos de consulta</h4>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <div\r\n      class=\"rounded-top table-responsive\"\r\n      *ngIf=\"!loading && tiposConsulta.length > 0; else notData\"\r\n    >\r\n      <table class=\"table table-bordered table-striped table-sm\">\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th scope=\"col\">Nombre</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of tiposConsulta\" class=\"text-center\">\r\n            <td>{{ item.name }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <ngb-pagination\r\n    class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n    [collectionSize]=\"pagination.collectionSize\"\r\n    [pageSize]=\"pagination.pageSize\"\r\n    [(page)]=\"pagination.page\"\r\n    (pageChange)=\"getTiposConsulta($event)\"\r\n    aria-label=\"Default pagination\"\r\n    maxSize=\"10\"\r\n    rotate=\"true\"\r\n    ellipses=\"false\"\r\n    boundaryLinks=\"true\"\r\n  >\r\n  </ngb-pagination>\r\n</div>\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TiposConsultaService } from './tipos-consulta.service';\r\n\r\n@Component({\r\n  selector: 'app-tipos-consulta',\r\n  templateUrl: './tipos-consulta.component.html',\r\n  styleUrls: ['./tipos-consulta.component.scss']\r\n})\r\nexport class TiposConsultaComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  tiposConsulta: any[] = []\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    collectionSize: 0\r\n  }\r\n\r\n\r\n  constructor(private _tipoService: TiposConsultaService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTiposConsulta();\r\n  }\r\n\r\n  getTiposConsulta(page = 1) {\r\n    this.pagination.page = page;\r\n    this.loading = true;\r\n    this._tipoService.paginate(this.pagination)\r\n      .subscribe((res: any) => {\r\n        this.loading = false;\r\n        this.tiposConsulta = res.data.data;\r\n        this.pagination.collectionSize = res.total;\r\n      })\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposSalarioService {\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getSalaryTypesList() {\r\n    return this.http.get(`${environment.base_url}/salaryTypes`);\r\n  }\r\n\r\n  getSalaryTypes( params = {} ) {\r\n    return this.http.get(`${environment.base_url}/paginateSalaryType`, {params});\r\n  }\r\n\r\n  createSalaryType( data:any ) {\r\n    return this.http.post(`${environment.base_url}/salaryTypes`, data);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}