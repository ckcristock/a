{"version":3,"sources":["./src/app/core/utils/confirmMessage.ts","./src/app/pages/ajustes/informacion-base/contracts-eps/list-contracts/list-contracts.component.ts","./src/app/pages/ajustes/informacion-base/contracts-eps/list-contracts/list-contracts.component.html","./src/app/pages/ajustes/informacion-base/contracts-eps/crear-contratos/crear-contratos.component.ts","./src/app/pages/ajustes/informacion-base/contracts-eps/crear-contratos/crear-contratos.component.html","./src/app/pages/ajustes/informacion-base/contracts-eps/crear-contratos/contracts-eps-routing.ts","./src/app/pages/ajustes/informacion-base/contracts-eps/contracts-eps.component.ts","./src/app/pages/ajustes/informacion-base/contracts-eps/contracts-eps.component.html","./src/app/pages/ajustes/informacion-base/contracts-eps/contracts-eps.module.ts"],"names":[],"mappings":"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","file":"default~configuracion-configuracion-module~informacion-base-contracts-eps-contracts-eps-module~infor~0ba2147c.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nexport async function showConfirm<T>(status: any, model: string) {\r\n    return Swal.fire({\r\n        title: '¿Estas seguro?',\r\n        text: (status === 'Inactivo' ? `La ${model} se Inactivará!` : `La ${model} se activará`),\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'Cancelar',\r\n        confirmButtonText: (status === 'Inactivo' ? 'Si, Inhabilitar' : 'Si, activar')\r\n    })\r\n}\r\n\r\nexport async function showConfirmCancel<T>(status: any, model: string) {\r\n    const SwalMsje = Swal.mixin({\r\n        customClass: {\r\n            confirmButton: 'btn btn-success mx-2',\r\n            cancelButton: 'btn btn-danger'\r\n        },\r\n        buttonsStyling: false\r\n    })\r\n\r\n    return SwalMsje.fire({\r\n        title: '¿está seguro?',\r\n        text: \"Se dispone a Cancelar una \".concat(model),\r\n        icon: 'warning',\r\n        input: 'text',\r\n        inputAttributes: {\r\n            maxlength: \"50\",\r\n            autocapitalize: 'off',\r\n            autocorrect: 'off'\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Si, ¡Cita Cancelar '.concat(model),\r\n        cancelButtonText: 'No, ¡déjeme comprobar!',\r\n        reverseButtons: true\r\n    })\r\n}\r\n\r\nexport async function showConfirmCancelWhitoutMessage<T>(status: any, model: string) {\r\n    return Swal.fire({\r\n        title: '¿Estas seguro?',\r\n        text: `Estas a un paso de ${status} esta  ${model} !`,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'Cancelar',\r\n        confirmButtonText: 'Si, ' + status\r\n    })\r\n}\r\n\r\nexport function successMessage<T>(\r\n    status: any = 'Operación exitosa',\r\n    message: string = 'Felicidades, Operacíón realizada correctamente.',\r\n    model: string = ''\r\n) {\r\n    Swal.fire({\r\n        title: status,\r\n        text: message,\r\n        icon: 'success',\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false\r\n    })\r\n}\r\n\r\nexport function errorMessage<T>(\r\n    status: any = 'Ooops',\r\n    model: string = ''\r\n) {\r\n    Swal.fire({\r\n        title: status,\r\n        text: 'Se han registrado errores operación no realizada',\r\n        icon: 'error',\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false\r\n    })\r\n}\r\n\r\nexport function WarningMessage<T>(\r\n    status: any = 'Ooops',\r\n    text: any = 'Verifique los datos',\r\n    model: string = ''\r\n) {\r\n    Swal.fire({\r\n        title: status,\r\n        text: text,\r\n        icon: 'error',\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false\r\n    })\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { Router } from '@angular/router';\r\nimport { EpssService } from '../../services/epss.service';\r\nimport { SwalService } from '../../services/swal.service';\r\n\r\n@Component({\r\n  selector: 'app-list-contracts',\r\n  templateUrl: './list-contracts.component.html',\r\n  styleUrls: ['./list-contracts.component.scss']\r\n})\r\nexport class ListContractsComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  matPanel = false;\r\n  contracts: any[] = [];\r\n  loading: boolean = false;\r\n  filtros: any = {\r\n    name: '',\r\n    code: ''\r\n  }\r\n\r\n  pagination: any = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    collectionSize: 0\r\n  }\r\n\r\n\r\n  constructor(\r\n    private epsContractService: EpssService,\r\n    private router: Router,\r\n    private _swal: SwalService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContratos();\r\n  }\r\n\r\n  openClose() {\r\n    if (this.matPanel == false) {\r\n      this.accordion.openAll()\r\n      this.matPanel = true;\r\n    } else {\r\n      this.accordion.closeAll()\r\n      this.matPanel = false;\r\n    }\r\n  }\r\n\r\n  getAllContratos(page = 1) {\r\n    this.pagination.page = page;\r\n    let params = {\r\n      ...this.pagination, ...this.filtros\r\n    }\r\n\r\n    this.loading = true;\r\n    this.epsContractService.getAllPaginateEpsContact(params)\r\n      .subscribe((res: any) => {\r\n        this.loading = false;\r\n        this.contracts = res.data.data;\r\n        this.pagination.collectionSize = res.data.total;\r\n      });\r\n  }\r\n\r\n  anularOActivar(zone, status, state) {\r\n\r\n    let data: any = {\r\n      id: zone.id,\r\n      status,\r\n      state\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: (status === 0 ? '¡El contrato se anulará!' : '¡El contrato se activará!'),\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.epsContractService.createNewEpsContact(data)\r\n          .subscribe(res => {\r\n            this.getAllContratos();\r\n            this._swal.show({\r\n              title: (status === 0 ? '¡Contrato anulado!' : '¡Contrato activado!'),\r\n              text: 'Operación completada con éxito.',\r\n              icon: 'success',\r\n              showCancel: false,\r\n              timer: 1000\r\n            })\r\n          })\r\n      }\r\n    })\r\n\r\n    //\r\n    //     \r\n    //   }\r\n    // })\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row card-title d-flex justify-content-between\">\r\n      <div class=\"col-md-6 px-0\">\r\n        <h4 class=\"text-primary\">Contratos clientes</h4>\r\n      </div>\r\n      <div class=\"col-md-6 px-0 text-right\">\r\n        <div class=\"btn-group rounded w-sm-100\">\r\n          <button\r\n            class=\"btn btn-primary btn-sm\"\r\n            [routerLink]=\"['create-contract']\"\r\n          >\r\n            <i class=\"fa fa-plus\"></i> Agregar\r\n          </button>\r\n          <button class=\"btn btn-info btn-sm\" (click)=\"openClose()\">\r\n            <i class=\"fas fa-sliders-h\"></i> Filtros\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\" />\r\n    <mat-accordion multi>\r\n      <mat-expansion-panel class=\"mat-elevation-z0\">\r\n        <div class=\"row\">\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por nombre\"\r\n              (input)=\"getAllContratos()\"\r\n              [(ngModel)]=\"filtros.name\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"col\" appearance=\"outline\">\r\n            <mat-label>Código</mat-label>\r\n            <input\r\n              matInput\r\n              type=\"text\"\r\n              placeholder=\"Busca por código\"\r\n              (input)=\"getAllContratos()\"\r\n              [(ngModel)]=\"filtros.code\"\r\n              autocomplete=\"off\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n    <div\r\n      class=\"rounded-top table-responsive\"\r\n      *ngIf=\"!loading && contracts.length > 0; else notData\"\r\n    >\r\n      <table class=\"table table-bordered table-striped table-sm\">\r\n        <thead class=\"bg-light\">\r\n          <tr class=\"text-center text-uppercase\">\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Código</th>\r\n            <th scope=\"col\">Ips</th>\r\n            <th scope=\"col\">Aseguradora</th>\r\n            <th scope=\"col\">Vigencia</th>\r\n            <th scope=\"col\"><i class=\"mdi mdi-chevron-down\"></i></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let contract of contracts\"\r\n            class=\"text-center\"\r\n            [ngClass]=\"{ 'text-danger font-weight': !contract.status }\"\r\n          >\r\n            <td scope=\"row\">{{ contract.name }}</td>\r\n            <td>{{ contract.code }}</td>\r\n            <td>{{ contract?.company?.name }}</td>\r\n            <td>{{ contract?.administrator?.name }}</td>\r\n            <td>{{ contract.start_date }} - {{ contract.end_date }}</td>\r\n            <td>\r\n              <div ngbDropdown container=\"body\" class=\"dropdown-primary\">\r\n                <button\r\n                  ngbDropdownToggle\r\n                  class=\"btn btn-primary btn-sm waves-light\"\r\n                  type=\"button\"\r\n                >\r\n                  <i class=\"mdi mdi-chevron-down\"></i>\r\n                </button>\r\n                <div ngbDropdownMenu>\r\n                  <a\r\n                    class=\"dropdown-item text-info waves-light caja-botones\"\r\n                    href=\"javascript:void(0)\"\r\n                    [routerLink]=\"['edit-contract', contract.id]\"\r\n                  >\r\n                    <i class=\"far fa-edit\"></i> Editar</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"contract.status\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-danger waves-light caja-botones\"\r\n                    (click)=\"anularOActivar(contract, 0, 'Inactivo')\"\r\n                  >\r\n                    <i class=\"fas fa-trash-alt\"></i> Anular</a\r\n                  >\r\n                  <a\r\n                    *ngIf=\"!contract.status\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"dropdown-item text-success waves-light caja-botones\"\r\n                    (click)=\"anularOActivar(contract, 1, 'Activo')\"\r\n                  >\r\n                    <i class=\"fas fa-check\"></i> Activar</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ngb-pagination\r\n      class=\"d-flex justify-content-center pagination-rounded pagination-sm\"\r\n      [collectionSize]=\"pagination.collectionSize\"\r\n      [pageSize]=\"pagination.pageSize\"\r\n      [(page)]=\"pagination.page\"\r\n      (pageChange)=\"getAllContratos($event)\"\r\n      aria-label=\"Default pagination\"\r\n      maxSize=\"5\"\r\n      rotate=\"true\"\r\n      ellipses=\"false\"\r\n      boundaryLinks=\"true\"\r\n    >\r\n    </ngb-pagination>\r\n  </div>\r\n</div>\r\n\r\n<!-- <app-modal-cup (dataChange)=\"getAllContractos()\"></app-modal-cup> -->\r\n\r\n<ng-template #notData>\r\n  <app-not-data [loading]=\"loading\"></app-not-data>\r\n</ng-template>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Response } from 'src/app/core/response.model';\r\nimport { EpssService } from '../../services/epss.service';\r\n// import { forkJoin, Observable, of, OperatorFunction } from 'rxjs';\r\n// import { catchError, debounceTime, distinctUntilChanged, filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { DataDinamicService } from 'src/app/data-dinamic.service';\r\nimport { NgForm, ValidatorFn, FormControl, FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { OpenAgendaService } from 'src/app/pages/agendamiento/open-agenda.service';\r\n\r\nimport { Observable, of, OperatorFunction, Subscription } from 'rxjs';\r\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { WarningMessage, showConfirmCancelWhitoutMessage, errorMessage, successMessage } from 'src/app/core/utils/confirmMessage';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SwalService } from '../../services/swal.service';\r\nimport { TiposervicioService } from '../../services/tiposervicio/tiposervicio.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-crear-contratos',\r\n  templateUrl: './crear-contratos.component.html',\r\n  styleUrls: ['./crear-contratos.component.scss']\r\n})\r\nexport class CrearContratosComponent implements OnInit {\r\n  @ViewChild('confirmacionSwal') confirmacionSwal: any;\r\n  dataForm: FormGroup;\r\n  numberRegEx = /^(0|\\-?[1-9][0-9]*)$/;\r\n  regexp = /^\\d+\\.\\d{0,2}$/;\r\n\r\n  public start_date: any;\r\n  public end_date: any;\r\n  public administrators: Array<object> = [];\r\n  public departments: Array<object> = [];\r\n  public priceList: Array<object> = [];\r\n  public paymentMethods: Array<object> = [];\r\n  public benefitsPlan: Array<object> = [];\r\n  public locations: Array<object> = [];\r\n  public regimes: Array<object> = [];\r\n  public companys: Array<object> = [];\r\n  public specialities: Array<object> = [];\r\n  public typeService: Array<object> = [];\r\n  public municipalities: Array<object> = [];\r\n  public technicalNotes: Array<object> = [];\r\n  public years: Array<any> = [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030];\r\n  public year: number = 2019;\r\n  public Policies: Array<object> = [{}];\r\n  public id: any = null;\r\n\r\n  public centrosDeCosto: Array<object> = [];\r\n  public routes: Array<object> = [\r\n    { value: 1, text: 'prueba' }\r\n  ];\r\n\r\n  public model: any;\r\n  private subscription = new Subscription();\r\n  public searchingProcedure: boolean;\r\n  public searchFailedProcedure: boolean;\r\n  public namecupmodel: any;\r\n  public attention_routes: any[] =[]\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private frmbuilder: FormBuilder,\r\n    private _epsService: EpssService,\r\n    private _dataDinamicService: DataDinamicService,\r\n    private _openAgendaService: OpenAgendaService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private _swal: SwalService,\r\n    private _typeService: TiposervicioService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.getAllData();\r\n    this.createForm();\r\n    this.locations.unshift({ text: 'Seleccione', value: '' })\r\n    this.dataForm.get('company_id').valueChanges.subscribe(change => {\r\n      this.getLocations(change);\r\n    });\r\n    this.dataForm.get('department_id').valueChanges.subscribe(change => {\r\n      this.getMunicipalities(change);\r\n    });\r\n    if (this.id) {\r\n      this.getData();\r\n    }\r\n  }\r\n\r\n  payment_methods_contracts: any[] = []\r\n  getPaymentMethodsContracts() {\r\n    this._epsService.getPaymentMethodsContracts().subscribe((res: any) => {\r\n      this.payment_methods_contracts = res.data\r\n    })\r\n  }\r\n\r\n  getAttentionRoutes() {\r\n    this._epsService.getAttentionRoutes().subscribe((res: Response) => {\r\n      this.attention_routes = res.data\r\n    })\r\n  }\r\n\r\n\r\n  getData() {\r\n    this._epsService.getInfoEpsContract(this.id).subscribe((data: Response) => {\r\n      this.Policies = data.data.policies;\r\n      this.dataForm.patchValue(\r\n        {\r\n          id: this.id,\r\n          name: data.data.name,\r\n          code: data.data.code,\r\n          number: data.data.number,\r\n          //Revisar\r\n          payment_method_id: data.data.payment_method_id,\r\n          payment_methods_contracts_id: data.data.payment_methods_contracts_id,\r\n          benefits_plans_id: data.data.benefits_plans_id,\r\n          /************************ */\r\n          administrator_id: data.data.administrator_id,\r\n          price: data.data.price,\r\n          start_date: data.data.start_date,\r\n          end_date: data.data.end_date,\r\n          department_id: this.transformData(data.data.departments),\r\n          municipality_id: this.transformData2(data.data.municipalities),\r\n          regimen_id: this.transformData2(data.data.regimentypes),\r\n          location_id: this.transformData2(data.data.locations),\r\n          type_service_id: this.transformData2(data.data.type_service),\r\n          company_id: data.data.company_id,\r\n          poliza: this.fillPolicies(data.data.policies),\r\n          technicalNote: this.fillTechnicalNotes(data.data.technic_notes)\r\n          //company_id: this.transformData(data.data.companies),\r\n        }\r\n      );\r\n      data.data.type_service.forEach(element => {\r\n        this.centrosDeCosto.push({ value: element.id, text: element.name })\r\n      });\r\n    })\r\n  }\r\n\r\n  transformData = (array: Array<object>): any => array.map(({ ...obj }) => obj['department_id'])\r\n  transformData2 = (array: Array<object>): any => array.map(({ ...obj }) => obj['id'])\r\n\r\n  getAllData = async () => {\r\n    await this.getDepartments();\r\n    this.getAdministrators()\r\n    this.getPriceList()\r\n    this.getPaymentMethod()\r\n    this.getBenefitsPlan()\r\n    this.getRegimes()\r\n    this.getTypeServices();\r\n    this.getAttentionRoutes();\r\n    this.getPaymentMethodsContracts();\r\n    await this.getCompanies()\r\n  }\r\n\r\n  getTypeServices() {\r\n    this._typeService.getTypes({ is_service: 'Y' }).subscribe((res: Response) => {\r\n      this.typeService = res.data\r\n    })\r\n  }\r\n\r\n  getAdministrators = () => {\r\n    this._epsService.getAllEps().subscribe((resp: Response) => {\r\n      this.administrators = resp.data\r\n    })\r\n  }\r\n\r\n  getDepartments = async () => {\r\n    await this._dataDinamicService.getDepartments().toPromise().then((req: any) => {\r\n      this.departments = req.data\r\n      this.departments.unshift({ text: 'Todos', value: 'todos' })\r\n    })\r\n  }\r\n\r\n  getMunicipalities = async (change) => {\r\n    this.dataForm.get('municipality_id').reset()\r\n    let parm = { department_id: [change] }\r\n    await this._dataDinamicService.getCities(parm).toPromise().then((req: any) => {\r\n      this.municipalities = req.data\r\n      this.municipalities.push({ text: 'Todos', value: 'todos' })\r\n    })\r\n  }\r\n\r\n  getPriceList = () => {\r\n    this._dataDinamicService.getPriceList().subscribe((req: any) => {\r\n      this.priceList = req.data\r\n      this.priceList.unshift({ text: 'Anexo', value: '1' })\r\n      this.priceList.unshift({ text: 'Seleccione', value: '' })\r\n    })\r\n  }\r\n\r\n  getPaymentMethod = () => {\r\n    this._dataDinamicService.getPaymentMethod().subscribe((req: any) => {\r\n      this.paymentMethods = req.data\r\n      this.paymentMethods.unshift({ text: 'Consignación', value: '1' })\r\n      this.paymentMethods.unshift({ text: 'Seleccione', value: '' })\r\n    })\r\n  }\r\n\r\n  getBenefitsPlan() {\r\n    this._dataDinamicService.getBenefitsPlan().subscribe((req: any) => {\r\n      this.benefitsPlan = req.data\r\n    })\r\n  }\r\n\r\n  getRegimes() {\r\n    this._dataDinamicService.getRegimens().subscribe((req: any) => {\r\n      this.regimes = req.data\r\n    })\r\n  }\r\n\r\n  getCompanies = async () => {\r\n    await this._dataDinamicService.getCompanies().toPromise().then((req: any) => {\r\n      this.companys = req.data\r\n      this.companys.unshift({ text: 'Seleccione', value: '' })\r\n    })\r\n  }\r\n\r\n  getLocations = (change) => {\r\n    this._dataDinamicService.getLocations(change).subscribe((req: any) => {\r\n      this.locations = req.data\r\n      this.locations.unshift({ text: 'Seleccione', value: '' })\r\n    })\r\n  }\r\n\r\n  private dateRangeValidator: ValidatorFn = (): {\r\n    [key: string]: any;\r\n  } | null => {\r\n    let invalid = false;\r\n    const from = this.dataForm && this.dataForm.get(\"start_date\").value;\r\n    const to = this.dataForm && this.dataForm.get(\"end_date\").value;\r\n    if (from && to) {\r\n      invalid = new Date(from).valueOf() > new Date(to).valueOf();\r\n    }\r\n    return invalid ? { invalidRange: { from, to } } : null;\r\n  };\r\n\r\n\r\n\r\n  deleteTaxi(i) {\r\n    this.technicalNoteList.removeAt(this.technicalNoteList.length - 1);\r\n  }\r\n\r\n  deletePoliza(i) {\r\n    this.polizaList.removeAt(this.polizaList.length - 1);\r\n  }\r\n  subItemsToDelete: Array<number> = [];\r\n\r\n  deleteCups(item: FormGroup, i: number) {\r\n    let cups = item.get('cups') as FormArray\r\n    cups.removeAt(i)\r\n  }\r\n\r\n  /*********************************************************************************************************************/\r\n\r\n  fillPolicies = (policies) => {\r\n    policies.forEach(element => {\r\n      this.newPolizaUpdate(element)\r\n    })\r\n  }\r\n\r\n  newPoliza() {\r\n    let list = this.polizaList;\r\n    list.push(this.getPoliza());\r\n  }\r\n\r\n  newPolizaUpdate(data) {\r\n    let list = this.polizaList;\r\n    list.push(this.getPolizaUpdate(data));\r\n  }\r\n\r\n  getPolizaUpdate(data): FormGroup {\r\n    let group = this.createPolizaGroupUpdate(this.fb, data);\r\n    return group;\r\n  }\r\n\r\n  createPolizaGroupUpdate(fb: FormBuilder, data) {\r\n    let group = fb.group(\r\n      {\r\n        codigopoliza: [data.code, Validators.required],\r\n        iniciopoliza: [data.start, Validators.required],\r\n        finpoliza: [data.end, Validators.required],\r\n        nombrepoliza: [data.name, Validators.required],\r\n        coberturapoliza: [data.coverage, Validators.required]\r\n      });\r\n    return group;\r\n  }\r\n\r\n  /********************************************************************************************************************* */\r\n  newtechnicalNote() {\r\n    let list = this.technicalNoteList;\r\n    list.push(this.getTechnicalNoteControl());\r\n  }\r\n\r\n  fillTechnicalNotes = (technic_notes) => {\r\n    technic_notes.forEach((element, i) => {\r\n      this.newtechnicalNoteUpdate(element, i)\r\n    })\r\n  }\r\n\r\n  newtechnicalNoteUpdate(data, i) {\r\n    let list = this.technicalNoteList;\r\n    let node = this.getTechnicalNoteControlUpdate(data)\r\n    list.push(node);\r\n    this.fillCups(node, data, i)\r\n  }\r\n\r\n  getTechnicalNoteControlUpdate(data): FormGroup {\r\n    let group = this.createGroupUpdate(this.fb, data);\r\n    return group;\r\n  }\r\n\r\n  createGroupUpdate(fb: FormBuilder, data) {\r\n    let bool = (data.is_active) ? true : false\r\n    let group = fb.group(\r\n      {\r\n        techn_note_date_init: [data.start, Validators.required],\r\n        techn_note_date_end: [data.end, Validators.required],\r\n        techn_note_year_cups: [Number(data.anio), Validators.required],\r\n        is_default: [bool],\r\n        cups: this.frmbuilder.array([], Validators.required)\r\n\r\n      }\r\n    );\r\n    return group;\r\n  }\r\n  /********************************************************************************************************************* */\r\n\r\n  newCups(item: FormGroup) {\r\n    let cups = item.get('cups') as FormArray\r\n    cups.push(this.getCupsControl());\r\n  }\r\n\r\n  fillCups = (node, data, i) => {\r\n    data.services.forEach(element => {\r\n      let cups = node.get('cups') as FormArray\r\n      cups.push(this.getCupsControlUpdate(element));\r\n    });\r\n  }\r\n\r\n  getCupsControlUpdate(data): FormGroup {\r\n    let group = this.createCupsGroupUpdate(this.fb, data);\r\n    return group;\r\n  }\r\n\r\n\r\n  createCupsGroupUpdate(fb: FormBuilder, data) {\r\n    let group = fb.group(\r\n      {\r\n        namec: data.cup,\r\n        valor: [data.value, Validators.required],\r\n        speciality_id: data.speciality_id,\r\n        specialityList: [data.cup.specialities],\r\n        centro_costo_id: [data.centro_costo_id, Validators.required],\r\n        route_id: [data.route_id],\r\n        frequency: [Number(data.frequency), Validators.required]\r\n      }\r\n    );\r\n    if (group.controls.centro_costo_id.value != 5) {\r\n      group.controls.route_id.disable()\r\n      group.controls.route_id.reset()\r\n    }\r\n    group.controls.centro_costo_id.valueChanges.subscribe(r => {\r\n      if (r == 5) {\r\n        group.controls.route_id.enable()\r\n      } else {\r\n        group.controls.route_id.disable()\r\n        group.controls.route_id.reset()\r\n      }\r\n    })\r\n    group.get('namec').valueChanges.subscribe((term) => {\r\n      this.year = group.parent.parent.get('techn_note_year_cups').value\r\n      if (term.value) {\r\n        this.getSpecialities(term.value, group);\r\n      }\r\n    })\r\n\r\n    return group;\r\n  }\r\n\r\n  /********************************************************************************************************************* */\r\n\r\n\r\n  getPoliza(): FormGroup {\r\n    let group = this.createPolizaGroup(this.fb);\r\n    return group;\r\n  }\r\n\r\n  getTechnicalNoteControl(): FormGroup {\r\n    let group = this.createGroup(this.fb);\r\n    return group;\r\n  }\r\n\r\n  getCupsControl(): FormGroup {\r\n    let group = this.createCupsGroup(this.fb);\r\n    return group;\r\n  }\r\n\r\n  get technicalNoteList() {\r\n    return this.dataForm.get('technicalNote') as FormArray;\r\n  }\r\n\r\n  get polizaList() {\r\n    return this.dataForm.get('poliza') as FormArray;\r\n  }\r\n\r\n  get cupsList() {\r\n    return this.dataForm.get('technicalNote') as FormArray;\r\n  }\r\n\r\n  GuardarContrato(dataForm: NgForm) {\r\n    let count = 0;\r\n    const controlparent = <FormArray>this.dataForm.get('technicalNote');\r\n    for (let index = 0; index < controlparent.length; index++) {\r\n      let firt = <FormGroup>controlparent.controls[index]\r\n      if (firt.get('is_default').value) count++\r\n    }\r\n\r\n    if (count == 0 || count >= 2) {\r\n      this._swal.show({\r\n        icon: 'error',\r\n        title: 'Operación denegada',\r\n        showCancel: false,\r\n        text: 'Debes seleccionar una nota técnica.',\r\n      })\r\n      return false\r\n    }\r\n    this._swal.show({\r\n      icon: 'question',\r\n      title: '¿Estás seguro(a)?',\r\n      showCancel: true,\r\n      text: ''\r\n    }).then((result: any) => {\r\n      if (result.isConfirmed) {\r\n        this.subscription.add(\r\n          this._epsService.createNewEpsContact(this.dataForm.value)\r\n            .subscribe((res: Response) => {\r\n              if (res.code === 200) {\r\n                this._swal.show({\r\n                  icon: 'success',\r\n                  title: res.data,\r\n                  showCancel: false,\r\n                  text: '',\r\n                  timer: 1000\r\n                })\r\n                this.router.navigateByUrl('/ajustes/informacion-base/contracts');\r\n              }\r\n              else {\r\n                errorMessage(res.err)\r\n              }\r\n            })\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  search: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      tap(() => this.searchingProcedure = true),\r\n      switchMap(term => term.length < 3 ? [] :\r\n        this._openAgendaService.searchProcedureByYear(term, this.year).pipe(\r\n          tap(() => this.searchFailedProcedure = false),\r\n          catchError(() => {\r\n            this.searchFailedProcedure = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap(() => {\r\n        return this.searchingProcedure = false\r\n      })\r\n    )\r\n\r\n  InputProcedure = (x: { text: string }) => x.text;\r\n\r\n\r\n  getSpecialities(a, group: FormGroup) {\r\n    this._dataDinamicService.getSpecialtiesByProcedure(a).subscribe((req: any) => {\r\n      this.specialities = req\r\n      group.patchValue({\r\n        specialityList: req\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n  createForm() {\r\n\r\n    this.dataForm = this.frmbuilder.group({\r\n      id: [null],\r\n      name: ['', Validators.required],\r\n      code: ['', Validators.required],\r\n      number: ['', [Validators.required]],\r\n      //payment_modality: [[], /* [Validators.required] */],\r\n      administrator_id: [, [Validators.required]],\r\n      regimen_id: ['', [Validators.required]],\r\n      price: ['', [Validators.required]],\r\n      start_date: ['', [Validators.required, this.dateRangeValidator]],\r\n      end_date: ['', [Validators.required, this.dateRangeValidator]],\r\n      department_id: ['', [Validators.required]],\r\n      municipality_id: ['', [Validators.required]],\r\n      company_id: ['', [Validators.required]],\r\n      location_id: [[], [Validators.required]],\r\n      type_service_id: [[], [Validators.required]],\r\n      poliza: this.frmbuilder.array([], Validators.required),\r\n      technicalNote: this.frmbuilder.array([], /* Validators.required */),\r\n      // contract_type: ['', Validators.required],\r\n      payment_method_id: ['', [Validators.required]],\r\n      payment_methods_contracts_id: ['', [Validators.required]],\r\n      benefits_plans_id: ['', [Validators.required]],\r\n      // benefits_plan_id: ['', [Validators.required]],\r\n      // variation: ['', [Validators.required, Validators.pattern(this.regexp)]],\r\n      // price_list_id: ['', [Validators.required]],\r\n    });\r\n\r\n    this.dataForm.controls.type_service_id.valueChanges.subscribe(r => {\r\n      this.centrosDeCosto = []\r\n      r.forEach(id => {\r\n        this.typeService.forEach((element: any) => {\r\n          if (id == element.value) {\r\n            this.centrosDeCosto.push(element)\r\n          }\r\n        });\r\n      });\r\n    })\r\n  }\r\n\r\n  createCupsGroup(fb: FormBuilder) {\r\n    let group = fb.group(\r\n      {\r\n        namec: ['', Validators.required],\r\n        // codec: ['', Validators.required],x\r\n        valor: ['', Validators.required],\r\n        // speciality: ['', Validators.required],\r\n        speciality_id: [],\r\n        specialityList: [[]],\r\n        // performance: ['', Validators.required],\r\n        // capacity: ['', Validators.required],\r\n        centro_costo_id: ['', Validators.required],\r\n        route_id: [{ value: '', disabled: true }],\r\n        // resource: ['', Validators.required],\r\n        frequency: ['', Validators.required]\r\n      }\r\n    );\r\n    group.controls.centro_costo_id.valueChanges.subscribe(r => {\r\n      if (r == 5) {\r\n        group.controls.route_id.enable()\r\n      } else {\r\n        group.controls.route_id.disable()\r\n      }\r\n    })\r\n    group.get('namec').valueChanges.subscribe((term) => {\r\n      this.year = group.parent.parent.get('techn_note_year_cups').value\r\n      if (term.value) {\r\n        this.getSpecialities(term.value, group);\r\n      }\r\n    })\r\n\r\n    return group;\r\n  }\r\n\r\n\r\n\r\n  createPolizaGroup(fb: FormBuilder) {\r\n    let group = fb.group(\r\n      {\r\n        codigopoliza: ['', Validators.required],\r\n        iniciopoliza: ['', Validators.required],\r\n        finpoliza: ['', Validators.required],\r\n        nombrepoliza: ['', Validators.required],\r\n        coberturapoliza: ['', Validators.required]\r\n      });\r\n    return group;\r\n  }\r\n\r\n  createGroup(fb: FormBuilder) {\r\n    let group = fb.group(\r\n      {\r\n        techn_note_date_init: ['', Validators.required],\r\n        techn_note_date_end: ['', Validators.required],\r\n        techn_note_year_cups: [2022, Validators.required],\r\n        is_default: [false],\r\n        cups: this.frmbuilder.array([], Validators.required)\r\n      }\r\n    );\r\n    return group;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"card\">\r\n  <form\r\n    #FormContrato=\"ngForm\"\r\n    ng-submit=\"\"\r\n    style=\"padding-bottom: 0px\"\r\n    [formGroup]=\"dataForm\"\r\n    novalidate\r\n  >\r\n    <div class=\"card-body\">\r\n      <div class=\"row card-title d-flex justify-content-between\">\r\n        <div class=\"col-md-12 px-0\">\r\n          <h4 class=\"text-primary\">Agregar o editar contrato</h4>\r\n        </div>\r\n      </div>\r\n      <hr class=\"line\" />\r\n      <input type=\"hidden\" id=\"id\" name=\"id\" formControlName=\"id\" />\r\n      <div class=\"row\">\r\n        <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el nombre\"\r\n            formControlName=\"name\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Código</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el código\"\r\n            formControlName=\"code\"\r\n            name=\"code\"\r\n            id=\"code\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Número</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            placeholder=\"Ingresa el número\"\r\n            formControlName=\"number\"\r\n            name=\"number\"\r\n            id=\"number\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Tipo de contrato</mat-label>\r\n          <mat-select formControlName=\"payment_method_id\" required>\r\n            <mat-option [value]=\"1\">Capita</mat-option>\r\n            <mat-option [value]=\"2\">Evento</mat-option>\r\n            <mat-option [value]=\"3\">PGP</mat-option>\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Aseguradora</mat-label>\r\n          <mat-select\r\n            name=\"administrator_id\"\r\n            id=\"administrator_id\"\r\n            formControlName=\"administrator_id\"\r\n          >\r\n            <mat-option\r\n              *ngFor=\"let item of administrators\"\r\n              [value]=\"item.value\"\r\n              >{{ item.text }}</mat-option\r\n            >\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Regimen</mat-label>\r\n          <mat-select\r\n            name=\"regimen_id\"\r\n            id=\"regimen_id\"\r\n            multiple=\"true\"\r\n            formControlName=\"regimen_id\"\r\n          >\r\n            <mat-option *ngFor=\"let item of regimes\" [value]=\"item.value\">{{\r\n              item.text\r\n            }}</mat-option>\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Precio global</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            placeholder=\"Ingresa el precio global\"\r\n            formControlName=\"price\"\r\n            name=\"price\"\r\n            id=\"price\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Fecha inicial</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"date\"\r\n            formControlName=\"start_date\"\r\n            name=\"start_date\"\r\n            id=\"start_date\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Fecha final</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"date\"\r\n            formControlName=\"end_date\"\r\n            name=\"end_date\"\r\n            id=\"end_date\"\r\n            required\r\n            autocomplete=\"off\"\r\n          />\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Plan de beneficios</mat-label>\r\n          <mat-select formControlName=\"benefits_plans_id\">\r\n            <mat-option *ngFor=\"let item of benefitsPlan\" [value]=\"item.value\">{{\r\n              item.text\r\n            }}</mat-option>\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Modalidad de pago</mat-label>\r\n          <mat-select formControlName=\"payment_methods_contracts_id\">\r\n            <mat-option *ngFor=\"let item of payment_methods_contracts\" [value]=\"item.value\">{{\r\n              item.text\r\n            }}</mat-option>\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"col\" appearance=\"outline\">\r\n          <mat-label>Tipo de servicio</mat-label>\r\n          <mat-select multiple=\"true\" formControlName=\"type_service_id\">\r\n            <mat-option *ngFor=\"let item of typeService\" [value]=\"item.value\">{{\r\n              item.text\r\n            }}</mat-option>\r\n          </mat-select>\r\n          <mat-error> Campo obligatorio </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 mb-4\">\r\n          <ng-select\r\n            [items]=\"departments\"\r\n            multiple=\"true\"\r\n            required\r\n            bindLabel=\"text\"\r\n            bindValue=\"value\"\r\n            appearance=\"outline\"\r\n            [appendTo]=\"'body'\"\r\n            placeholder=\"Departamentos\"\r\n            name=\"department_id\"\r\n            loadingText=\"loading\"\r\n            formControlName=\"department_id\"\r\n            [closeOnSelect]=\"false\"\r\n          >\r\n          </ng-select>\r\n          <small>\r\n            <app-show-errors\r\n              class=\"text-danger position-absolute\"\r\n              [ctrl]=\"dataForm.get('department_id')\"\r\n            >\r\n            </app-show-errors>\r\n          </small>\r\n        </div>\r\n        <div class=\"col-md-6 mb-4\">\r\n          <ng-select\r\n            [items]=\"municipalities\"\r\n            multiple=\"true\"\r\n            required\r\n            bindLabel=\"text\"\r\n            bindValue=\"value\"\r\n            appearance=\"outline\"\r\n            [appendTo]=\"'body'\"\r\n            placeholder=\"Municipios\"\r\n            name=\"municipality_id\"\r\n            loadingText=\"loading\"\r\n            formControlName=\"municipality_id\"\r\n            [closeOnSelect]=\"false\"\r\n          >\r\n          </ng-select>\r\n          <small>\r\n            <app-show-errors\r\n              class=\"text-danger position-absolute\"\r\n              [ctrl]=\"dataForm.get('municipality_id')\"\r\n            >\r\n            </app-show-errors>\r\n          </small>\r\n        </div>\r\n        <div class=\"col-md-6 mb-4\">\r\n          <ng-select\r\n            [items]=\"companys\"\r\n            required\r\n            bindLabel=\"text\"\r\n            bindValue=\"value\"\r\n            appearance=\"outline\"\r\n            [appendTo]=\"'body'\"\r\n            placeholder=\"Empresas\"\r\n            name=\"company_id\"\r\n            (change)=\"dataForm.get('location_id').reset()\"\r\n            loadingText=\"loading\"\r\n            formControlName=\"company_id\"\r\n            [closeOnSelect]=\"false\"\r\n          >\r\n          </ng-select>\r\n          <small>\r\n            <app-show-errors\r\n              class=\"text-danger position-absolute\"\r\n              [ctrl]=\"dataForm.get('company_id')\"\r\n            >\r\n            </app-show-errors>\r\n          </small>\r\n        </div>\r\n        <div class=\"col-md-6 mb-4\">\r\n          <ng-select\r\n            [items]=\"locations\"\r\n            multiple=\"true\"\r\n            required\r\n            bindLabel=\"text\"\r\n            bindValue=\"value\"\r\n            appearance=\"outline\"\r\n            [appendTo]=\"'body'\"\r\n            placeholder=\"Sedes\"\r\n            name=\"location_id\"\r\n            loadingText=\"loading\"\r\n            formControlName=\"location_id\"\r\n            [closeOnSelect]=\"false\"\r\n          >\r\n          </ng-select>\r\n          <small>\r\n            <app-show-errors\r\n              class=\"text-danger position-absolute\"\r\n              [ctrl]=\"dataForm.get('location_id')\"\r\n            >\r\n            </app-show-errors>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"row card-title d-flex justify-content-between\">\r\n        <div class=\"col-md-6 px-0\">\r\n          <h4>Pólizas</h4>\r\n        </div>\r\n        <div class=\"col-md-6 px-0 text-right\">\r\n          <div class=\"btn-group rounded w-sm-100\">\r\n            <button\r\n              class=\"btn btn-info btn-sm\"\r\n              type=\"button\"\r\n              (click)=\"newPoliza()\"\r\n            >\r\n              <i class=\"fas fa-plus\"></i> Agregar póliza\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-container *ngIf=\"polizaList.controls.length; else notData\">\r\n        <ng-container *ngFor=\"let poliz of polizaList.controls; let c = index\">\r\n          <div class=\"row my-2\">\r\n            <div class=\"col-md-6\">\r\n              <h6>Póliza {{ c + 1 }}</h6>\r\n            </div>\r\n            <div class=\"col-md-6 text-right\">\r\n              <div class=\"btn-group rounded w-sm-100\">\r\n                <button\r\n                  class=\"btn btn-danger btn-sm\"\r\n                  type=\"button\"\r\n                  (click)=\"deletePoliza($event.target.value)\"\r\n                >\r\n                  <i class=\"fas fa-trash-alt\"></i> Elimina póliza\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div formArrayName=\"poliza\">\r\n            <div class=\"row\" [formGroupName]=\"c\">\r\n              <mat-form-field class=\"col-md-6\" appearance=\"outline\">\r\n                <mat-label>Nombre</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  placeholder=\"Ingresa el nombre de la póliza\"\r\n                  formControlName=\"nombrepoliza\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Código</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  placeholder=\"Ingresa el código de la póliza\"\r\n                  formControlName=\"codigopoliza\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Cobertura</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"text\"\r\n                  placeholder=\"Ingresa la cobertura\"\r\n                  formControlName=\"coberturapoliza\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Fecha inicio</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"date\"\r\n                  formControlName=\"iniciopoliza\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Fecha fin</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"date\"\r\n                  formControlName=\"finpoliza\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <hr />\r\n\r\n      <div class=\"row card-title d-flex justify-content-between\">\r\n        <div class=\"col-md-6 px-0\">\r\n          <h4>Notas técnicas</h4>\r\n        </div>\r\n        <div class=\"col-md-6 px-0 text-right\">\r\n          <div class=\"btn-group rounded w-sm-100\">\r\n            <button\r\n              class=\"btn btn-success btn-sm\"\r\n              type=\"button\"\r\n              (click)=\"newtechnicalNote()\"\r\n            >\r\n              <i class=\"fas fa-plus\"></i> Agregar nota técnica\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"technicalNoteList.controls.length; else notData\">\r\n        <ng-container\r\n          *ngFor=\"let item of technicalNoteList.controls; let i = index\"\r\n        >\r\n          <hr class=\"text-primary\" />\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <h6>Nota técnica {{ i + 1 }}</h6>\r\n            </div>\r\n            <div class=\"col-md-6 text-right\">\r\n              <div class=\"btn-group rounded w-sm-100\">\r\n                <button\r\n                  class=\"btn btn-danger btn-sm\"\r\n                  type=\"button\"\r\n                  (click)=\"deleteTaxi($event.target.value)\"\r\n                >\r\n                  <i class=\"fas fa-trash-alt\"></i> Eliminar nota técnica\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div formArrayName=\"technicalNote\">\r\n            <div class=\"row\" [formGroupName]=\"i\">\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Fecha inicio</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"date\"\r\n                  id=\"techn_note_date_init\"\r\n                  name=\"techn_note_date_init\"\r\n                  formControlName=\"techn_note_date_init\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Fecha fin</mat-label>\r\n                <input\r\n                  matInput\r\n                  type=\"date\"\r\n                  id=\"techn_note_date_end\"\r\n                  name=\"techn_note_date_end\"\r\n                  formControlName=\"techn_note_date_end\"\r\n                  required\r\n                  autocomplete=\"off\"\r\n                />\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field class=\"col\" appearance=\"outline\">\r\n                <mat-label>Año versión</mat-label>\r\n                <mat-select formControlName=\"techn_note_year_cups\" required>\r\n                  <mat-option *ngFor=\"let item of years\" [value]=\"item\">{{\r\n                    item\r\n                  }}</mat-option>\r\n                </mat-select>\r\n                <mat-error> Campo obligatorio </mat-error>\r\n              </mat-form-field>\r\n              <div class=\"col-md-12 col-12\">\r\n                <div class=\"form-group\">\r\n                  <label>¿Nota tecnica activa?</label>\r\n                  <input\r\n                    class=\"mx-3\"\r\n                    type=\"checkbox\"\r\n                    formControlName=\"is_default\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <div class=\"row card-title d-flex justify-content-between\">\r\n                  <div class=\"col-md-6 px-0\">\r\n                    <h5 class=\"font-italic\"><u>Servicios asociados</u></h5>\r\n                  </div>\r\n                  <div class=\"col-md-6 px-0 text-right\">\r\n                    <div class=\"btn-group rounded w-sm-100\">\r\n                      <button\r\n                        class=\"btn btn-info btn-sm\"\r\n                        (click)=\"newCups(item)\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i class=\"fas fa-plus\"></i> Agregar servicio asociado\r\n                        (NT{{ i + 1 }})\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12\">\r\n                <ng-container\r\n                  *ngIf=\"item.controls['cups'].controls.length; else notData\"\r\n                >\r\n                  <div class=\"rounded-top \">\r\n                    <table class=\"table table-bordered table-striped table-sm table-services\">\r\n                      <thead class=\"bg-light\">\r\n                        <tr class=\"text-center text-uppercase\">\r\n                          <th>#</th>\r\n                          <th>Servicio</th>\r\n                          <th>Especialidad</th>\r\n                          <th>Centro de costo</th>\r\n                          <th>Ruta</th>\r\n                          <th>Frecuencia</th>\r\n                          <th>Costo</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <ng-container\r\n                          *ngFor=\"\r\n                            let cup of item.controls['cups'].controls;\r\n                            let c = index\r\n                          \"\r\n                        >\r\n                          <ng-container formArrayName=\"cups\">\r\n                            <ng-container [formGroupName]=\"c\">\r\n                              <tr>\r\n                                <td class=\"align-middle text-center\">{{ c + 1 }}</td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <input\r\n                                      matInput\r\n                                      type=\"text\"\r\n                                      placeholder=\"Busca código CUPS asignado\"\r\n                                      required\r\n                                      [ngbTypeahead]=\"search\"\r\n                                      formControlName=\"namec\"\r\n                                      name=\"namec\"\r\n                                      [resultTemplate]=\"namecup\"\r\n                                      [inputFormatter]=\"InputProcedure\"\r\n                                      autocomplete=\"off\"\r\n                                    />\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <mat-select\r\n                                      formControlName=\"speciality_id\"\r\n                                      required\r\n                                    >\r\n                                      <mat-option\r\n                                        *ngFor=\"\r\n                                          let item of cup.controls\r\n                                            .specialityList.value\r\n                                        \"\r\n                                        [value]=\"item.value\"\r\n                                        >{{ item.text }}</mat-option\r\n                                      >\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <mat-select\r\n                                      formControlName=\"centro_costo_id\"\r\n                                      required\r\n                                    >\r\n                                      <mat-option\r\n                                        *ngFor=\"let item of centrosDeCosto\"\r\n                                        [value]=\"item.value\"\r\n                                        >{{ item.text }}</mat-option\r\n                                      >\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <mat-select\r\n                                      formControlName=\"route_id\"\r\n                                    >\r\n                                      <mat-option\r\n                                        *ngFor=\"let item of attention_routes\"\r\n                                        [value]=\"item.value\"\r\n                                        >{{ item.text }}</mat-option\r\n                                      >\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <input\r\n                                      matInput\r\n                                      type=\"text\"\r\n                                      placeholder=\"Ingresa la frecuencia\"\r\n                                      id=\"code\"\r\n                                      formControlName=\"frequency\"\r\n                                      required\r\n                                      autocomplete=\"off\"\r\n                                    />\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                  <mat-form-field\r\n                                    class=\"pb-0 mat-sm\"\r\n                                    appearance=\"outline\"\r\n                                  >\r\n                                    <input\r\n                                      matInput\r\n                                      type=\"text\"\r\n                                      placeholder=\"Ingresa el costo\"\r\n                                      id=\"code\"\r\n                                      formControlName=\"valor\"\r\n                                      required\r\n                                      autocomplete=\"off\"\r\n                                    />\r\n                                  </mat-form-field>\r\n                                </td>\r\n                                <td class=\"align-middle text-center\">\r\n                                  <button\r\n                                    class=\"btn btn-danger btn-sm\"\r\n                                    type=\"button\"\r\n                                    (click)=\"\r\n                                      deleteCups(item, c)\r\n                                    \"\r\n                                  >\r\n                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </ng-container>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary btn-block mt-4\"\r\n        [disabled]=\"dataForm.pristine || dataForm.invalid\"\r\n        (click)=\"GuardarContrato(FormContrato)\"\r\n      >\r\n        Guardar\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<ng-template #notData>\r\n  <div class=\"alert alert-warning text-center\" role=\"alert\">\r\n    No hay datos aquí.\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #namecup let-r=\"result\" let-t=\"term\">\r\n  <span class=\"f-9\">\r\n    <strong>{{ r.text }}</strong>\r\n  </span>\r\n</ng-template>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListContractsComponent } from \"../list-contracts/list-contracts.component\";\r\nimport { CrearContratosComponent } from \"./crear-contratos.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ListContractsComponent },\r\n    { path: 'edit-contract/:id', component: CrearContratosComponent },\r\n    { path: 'create-contract', component: CrearContratosComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ContractsEpsRouting { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contracts-eps',\r\n  templateUrl: './contracts-eps.component.html',\r\n  styleUrls: ['./contracts-eps.component.scss']\r\n})\r\nexport class ContractsEpsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  contracts-eps works!\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContractsEpsComponent } from './contracts-eps.component';\r\nimport { CrearContratosComponent } from './crear-contratos/crear-contratos.component';\r\nimport { ContractsEpsRouting } from './crear-contratos/contracts-eps-routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { NgbNavModule, NgbPaginationModule, NgbTypeaheadModule, NgbDropdownModule, NgbAlertModule, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ListContractsComponent } from './list-contracts/list-contracts.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ContractsEpsRouting,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    ComponentsModule,\r\n    NgbNavModule,\r\n    NgbPaginationModule,\r\n    NgbTypeaheadModule,\r\n    NgbDropdownModule,\r\n    NgbAlertModule,\r\n    NgbDatepickerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n  ],\r\n  declarations: [\r\n    ContractsEpsComponent,\r\n    CrearContratosComponent,\r\n    ListContractsComponent\r\n  ]\r\n})\r\nexport class ContractsEpsModule { }\r\n"],"sourceRoot":"webpack:///"}